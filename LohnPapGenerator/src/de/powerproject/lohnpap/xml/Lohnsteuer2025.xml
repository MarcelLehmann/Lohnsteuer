<PAP name="Lohnsteuer2025" version="1.0" versionNummer="1.0">   
    <VARIABLES> 
		<!-- Stand: 2024-11-18 14:40-->
		<!-- ITZBund Berlin --> 

   		 <!--  EINGABEPARAMETER  -->
        <INPUTS>
            <!-- 1, wenn die Anwendung des Faktorverfahrens gewählt wurden (nur in Steuerklasse IV) -->
	        <INPUT name="af" type="int" default="1"/>
	
	        <!-- Auf die Vollendung des 64. Lebensjahres folgende
	             Kalenderjahr (erforderlich, wenn ALTER1=1) -->
	        <INPUT name="AJAHR" type="int"/>
	
	        <!-- 1, wenn das 64. Lebensjahr zu Beginn des Kalenderjahres vollendet wurde, in dem
	             der Lohnzahlungszeitraum endet (§ 24 a EStG), sonst = 0 -->
	        <INPUT name="ALTER1" type="int"/>
	
	        <!-- eingetragener Faktor mit drei Nachkommastellen -->
	        <INPUT name="f" type="double" default="1.0"/>
	
	        <!-- Jahresfreibetrag für die Ermittlung der Lohnsteuer für die sonstigen Bezüge 
	             sowie für Vermögensbeteiligungen nach § 19a Absatz 1 und 4 EStG nach Maßgabe der 
	             elektronischen Lohnsteuerabzugsmerkmale nach § 39e EStG oder der Eintragung 
	             auf der Bescheinigung für den Lohnsteuerabzug 2025 in Cent (ggf. 0) -->
	        <INPUT name="JFREIB" type="BigDecimal"/>
	
	        <!-- Jahreshinzurechnungsbetrag für die Ermittlung der Lohnsteuer für die sonstigen Bezüge
	             sowie für Vermögensbeteiligungen nach § 19a Absatz 1 und 4 EStG nach Maßgabe der 
	             elektronischen Lohnsteuerabzugsmerkmale nach § 39e EStG oder der Eintragung auf der 
	             Bescheinigung für den Lohnsteuerabzug 2025 in Cent (ggf. 0) -->
	        <INPUT name="JHINZU" type="BigDecimal"/>
	
	        <!-- Voraussichtlicher Jahresarbeitslohn ohne sonstige Bezüge (d.h. auch ohne 
	             die zu besteuernden Vorteile bei Vermögensbeteiligungen,
	             § 19a Absatz 4 EStG) in Cent. 
	             Anmerkung: Die Eingabe dieses Feldes (ggf. 0) ist erforderlich bei Eingaben zu sonstigen 
	             Bezügen (Feld SONSTB). 
	             Sind in einem vorangegangenen Abrechnungszeitraum bereits sonstige Bezüge gezahlt worden,
	             so sind sie dem voraussichtlichen Jahresarbeitslohn hinzuzurechnen. Gleiches gilt für zu 
	             besteuernde Vorteile bei Vermögensbeteiligungen (§ 19a Absatz 4 EStG). --> 
	        <INPUT name="JRE4" type="BigDecimal"/>
	        
	        <!-- In JRE4 enthaltene Entschädigungen nach § 24 Nummer 1 EStG und zu besteuernde 
	             Vorteile bei Vermögensbeteiligungen (§ 19a Absatz 4 EStG in Cent -->
	    	<INPUT name="JRE4ENT" type="BigDecimal" default="BigDecimal.ZERO"/>
	 
	        <!-- In JRE4 enthaltene Versorgungsbezuege in Cents (ggf. 0) -->
	        <INPUT name="JVBEZ" type="BigDecimal"/>
	
			<!--Merker für die Vorsorgepauschale
				0 = der Arbeitnehmer ist in der gesetzlichen Rentenversicherung oder einer 
				berufsständischen Versorgungseinrichtung pflichtversichert oder bei Befreiung von der 
				Versicherungspflicht freiwillig versichert; es gilt die allgemeine Beitragsbemessungsgrenze
				
				1 = wenn nicht 0
				 -->
	        <INPUT name="KRV" type="int"/>
	
			<!-- Kassenindividueller Zusatzbeitragssatz bei einem gesetzlich krankenversicherten Arbeitnehmer 
			 in Prozent (bspw. 2,50 für 2,50 %) mit 2 Dezimalstellen. 
			 Es ist der volle Zusatzbeitragssatz anzugeben. Die Aufteilung in Arbeitnehmer- und Arbeitgeber-
			 anteil erfolgt im Programmablauf. -->
			<INPUT name="KVZ" type="BigDecimal"/>
	
	        <!-- Lohnzahlungszeitraum:
	             1 = Jahr
	             2 = Monat
	             3 = Woche
	             4 = Tag -->
	        <INPUT name="LZZ" type="int"/>
	
	        <!-- Der als elektronisches Lohnsteuerabzugsmerkmal für den Arbeitgeber nach § 39e EStG festgestellte 
	             oder in der Bescheinigung für den Lohnsteuerabzug 2025 eingetragene Freibetrag für den 
	             Lohnzahlungszeitraum in Cent -->
	        <INPUT name="LZZFREIB" type="BigDecimal"/>
	
	        <!-- Der als elektronisches Lohnsteuerabzugsmerkmal für den Arbeitgeber nach § 39e EStG festgestellte 
	             oder in der Bescheinigung für den Lohnsteuerabzug 2025 eingetragene Hinzurechnungsbetrag für den
	             Lohnzahlungszeitraum in Cent -->
	        <INPUT name="LZZHINZU" type="BigDecimal"/>
	
	        <!-- Nicht zu besteuernde Vorteile bei Vermögensbeteiligungen 
	             (§ 19a Absatz 1 Satz 4 EStG) in Cent -->
	        <INPUT name="MBV" type="BigDecimal"/>

	        <!-- Dem Arbeitgeber mitgeteilte Zahlungen des Arbeitnehmers zur privaten
	             Kranken- bzw. Pflegeversicherung im Sinne des §10 Abs. 1 Nr. 3 EStG 2010
	             als Monatsbetrag in Cent (der Wert ist inabhängig vom Lohnzahlungszeitraum immer 
	             als Monatsbetrag anzugeben).-->
	        <INPUT name="PKPV" type="BigDecimal" default="new BigDecimal(0)"/>
	        
	        <!-- Krankenversicherung:
	             0 = gesetzlich krankenversicherte Arbeitnehmer
	             1 = ausschließlich privat krankenversicherte Arbeitnehmer OHNE Arbeitgeberzuschuss
	             2 = ausschließlich privat krankenversicherte Arbeitnehmer MIT Arbeitgeberzuschuss -->
	        <INPUT name="PKV" type="int" default="0"/>
	        
	        <!-- Zahl der beim Arbeitnehmer zu berücksichtigenden Beitragsabschläge in der sozialen Pflegeversicherung
	             bei mehr als einem Kind
	             0 = kein Abschlag
				 1 = Beitragsabschlag für das 2. Kind
				 2 = Beitragsabschläge für das 2. und 3. Kind
				 3 = Beitragsabschläge für 2. bis 4. Kinder
				 4 = Beitragsabschläge für 2. bis 5. oder mehr Kinder   -->
	        <INPUT name="PVA" type="BigDecimal" default="new BigDecimal(0)"/>
	        
	        
	        <!-- 1, wenn bei der sozialen Pflegeversicherung die Besonderheiten in Sachsen zu berücksichtigen sind bzw. 
	        	 	zu berücksichtigen wären, sonst 0. -->
	        <INPUT name="PVS" type="int" default="0"/>
	
	        <!-- 1, wenn er der Arbeitnehmer den Zuschlag zur sozialen Pflegeversicherung 
	        	 	zu zahlen hat, sonst 0. -->
	        <INPUT name="PVZ" type="int" default="0"/>
	        
	        <!-- Religionsgemeinschaft des Arbeitnehmers lt. elektronischer Lohnsteuerabzugsmerkmale oder der 
	             Bescheinigung für den Lohnsteuerabzug 2025 (bei keiner Religionszugehörigkeit = 0) -->
	        <INPUT name="R" type="int"/>
	
	        <!-- Steuerpflichtiger Arbeitslohn für den Lohnzahlungszeitraum vor Berücksichtigung des 
	             Versorgungsfreibetrags und des Zuschlags zum Versorgungsfreibetrag, des Altersentlastungsbetrags 
	             und des als elektronisches Lohnsteuerabzugsmerkmal festgestellten oder in der Bescheinigung für 
	             den Lohnsteuerabzug 2025 für den Lohnzahlungszeitraum eingetragenen Freibetrags bzw. 
	             Hinzurechnungsbetrags in Cent -->
	        <INPUT name="RE4" type="BigDecimal"/>
	
	        <!-- Sonstige Bezüge einschließlich zu besteuernde Vorteile bei Vermögensbeteiligungen und Sterbegeld bei Versorgungsbezügen sowie 
	             Kapitalauszahlungen/Abfindungen, in Cent (ggf. 0) -->
	        <INPUT name="SONSTB" type="BigDecimal"/>
	        
	        <!-- In SONSTB enthaltene Entschädigungen nach § 24 Nummer 1 EStG -->
	    	<INPUT name="SONSTENT" type="BigDecimal" default="BigDecimal.ZERO"/>
	
	        <!-- Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
	              (in SONSTB enthalten) in Cent -->
	        <INPUT name="STERBE" type="BigDecimal" regex_test="" regex_transform=""/>
	
	        <!-- Steuerklasse:
	             1 = I
	             2 = II
	             3 = III
	             4 = IV
	             5 = V
	             6 = VI -->
	        <INPUT name="STKL" type="int"/>
	
	        <!-- In RE4 enthaltene Versorgungsbezuege in Cents (ggf. 0) -->
	        <INPUT name="VBEZ" type="BigDecimal"/>
	
	        <!-- Vorsorgungsbezug im Januar 2005 bzw. fuer den ersten vollen Monat
	             in Cents-->
	        <INPUT name="VBEZM" type="BigDecimal"/>
	
	        <!-- Voraussichtliche Sonderzahlungen im Kalenderjahr des Versorgungsbeginns
	             bei Versorgungsempfaengern ohne Sterbegeld, Kapitalauszahlungen/Abfindungen
	             bei Versorgungsbezuegen in Cents-->
	        <INPUT name="VBEZS" type="BigDecimal"/>
	
	        <!-- In SONSTB enthaltene Versorgungsbezuege einschliesslich Sterbegeld
	            in Cents (ggf. 0) -->
	        <INPUT name="VBS" type="BigDecimal"/>
	
	        <!-- Jahr, in dem der Versorgungsbezug erstmalig gewaehrt wurde; werden
	             mehrere Versorgungsbezuege gezahlt, so gilt der aelteste erstmalige Bezug -->
	        <INPUT name="VJAHR" type="int" regex_test="" regex_transform=""/>
		
	        <!-- Zahl der Freibetraege fuer Kinder (eine Dezimalstelle, nur bei Steuerklassen
	             I, II, III und IV) -->
	        <INPUT name="ZKF" type="BigDecimal" regex_test="" regex_transform=""/>
	
	        <!-- Zahl der Monate, fuer die Versorgungsbezuege gezahlt werden (nur
	             erforderlich bei Jahresberechnung (LZZ = 1) -->
	        <INPUT name="ZMVB" type="int" regex_test="" regex_transform=""/>
	        

    	</INPUTS>

    	<!--  AUSGABEPARAMETER  -->
		<OUTPUTS type="STANDARD">
	        <!-- Bemessungsgrundlage fuer die Kirchenlohnsteuer in Cents -->
	        <OUTPUT name="BK" type="BigDecimal" default="new BigDecimal(0)"/>
	
	        <!-- Bemessungsgrundlage der sonstigen Bezüge  für die Kirchenlohnsteuer in Cent.
                 Hinweis: Negativbeträge, die aus nicht zu besteuernden Vorteilen bei 
                 Vermögensbeteiligungen (§ 19a Absatz 1 Satz 4 EStG) resultieren, mindern BK 
                 (maximal bis 0). Der Sonderausgabenabzug für tatsächlich erbrachte Vorsorgeaufwendungen 
                 im Rahmen der Veranlagung zur Einkommensteuer bleibt unberührt. -->
	        <OUTPUT name="BKS" type="BigDecimal" default="new BigDecimal(0)"/>
	
	
	        <!-- Fuer den Lohnzahlungszeitraum einzubehaltende Lohnsteuer in Cents -->
	        <OUTPUT name="LSTLZZ" type="BigDecimal" default="new BigDecimal(0)"/>
	
	        <!-- Fuer den Lohnzahlungszeitraum einzubehaltender Solidaritaetszuschlag
	             in Cents -->
	        <OUTPUT name="SOLZLZZ" type="BigDecimal" default="new BigDecimal(0)"/>
	
	        <!-- Solidaritätszuschlag für sonstige Bezüge (ohne Vergütung für mehrjährige Tätigkeit in Cent.
                 Hinweis: Negativbeträge, die aus nicht zu besteuernden Vorteilen bei Vermögensbeteiligungen 
                 (§ 19a Absatz 1 Satz 4 EStG) resultieren, mindern SOLZLZZ (maximal bis 0). Der 
                 Sonderausgabenabzug für tatsächlich erbrachte Vorsorgeaufwendungen im Rahmen der 
                 Veranlagung zur Einkommensteuer bleibt unberührt. -->
	        <OUTPUT name="SOLZS" type="BigDecimal" default="new BigDecimal(0)"/>
	
	        <!-- Lohnsteuer für sonstige Bezüge in Cent
                 Hinweis: Negativbeträge, die aus nicht zu besteuernden Vorteilen bei Vermögensbeteiligungen
                 (§ 19a Absatz 1 Satz 4 EStG) resultieren, mindern LSTLZZ (maximal bis 0). Der 
                 Sonderausgabenabzug für tatsächlich erbrachte Vorsorgeaufwendungen im Rahmen der 
                 Veranlagung zur Einkommensteuer bleibt unberührt. -->
	        <OUTPUT name="STS" type="BigDecimal" default="new BigDecimal(0)"/>
		        
	        <!-- Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers zur
				 privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf. auch
				 die Mindestvorsorgepauschale) in Cent beim laufenden Arbeitslohn. Für Zwecke der Lohn-
				 steuerbescheinigung sind die einzelnen Ausgabewerte außerhalb des eigentlichen Lohn-
				 steuerbescheinigungsprogramms zu addieren; hinzuzurechnen sind auch die Ausgabewerte
				 VKVSONST -->
			<OUTPUT name="VKVLZZ" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers 
				 zur privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf. 
				 auch die Mindestvorsorgepauschale) in Cent bei sonstigen Bezügen. Der Ausgabewert kann
				 auch negativ sein. -->
			<OUTPUT name="VKVSONST" type="BigDecimal" default="new BigDecimal(0)"/> 
		
		</OUTPUTS>
		
		<!--  AUSGABEPARAMETER DBA  -->
		<OUTPUTS type="DBA">
		
			<!-- Verbrauchter Freibetrag bei Berechnung des laufenden Arbeitslohns, in Cent -->
			<OUTPUT name="VFRB" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Verbrauchter Freibetrag bei Berechnung des voraussichtlichen Jahresarbeitslohns, in Cent -->
			<OUTPUT name="VFRBS1" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Verbrauchter Freibetrag bei Berechnung der sonstigen Bezüge, in Cent -->
			<OUTPUT name="VFRBS2" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Für die weitergehende Berücksichtigung des Steuerfreibetrags nach dem DBA Türkei verfügbares ZVE über 
				dem Grundfreibetrag bei der Berechnung des laufenden Arbeitslohns, in Cent -->
			<OUTPUT name="WVFRB" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Für die weitergehende Berücksichtigung des Steuerfreibetrags nach dem DBA Türkei verfügbares ZVE über dem Grundfreibetrag 
				bei der Berechnung des voraussichtlichen Jahresarbeitslohns, in Cent -->
			<OUTPUT name="WVFRBO" type="BigDecimal" default="new BigDecimal(0)"/> 
			
			<!-- Für die weitergehende Berücksichtigung des Steuerfreibetrags nach dem DBA Türkei verfügbares ZVE 
				über dem Grundfreibetrag bei der Berechnung der sonstigen Bezüge, in Cent -->
			<OUTPUT name="WVFRBM" type="BigDecimal" default="new BigDecimal(0)"/> 
		</OUTPUTS>

	    <!--  INTERNE FELDER  -->
		<INTERNALS>
		        <!-- Altersentlastungsbetrag nach Alterseinkünftegesetz in €,
		             Cent (2 Dezimalstellen) -->
		        <INTERNAL name="ALTE" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Arbeitnehmer-Pauschbetrag in EURO -->
		        <INTERNAL name="ANP" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf den Lohnzahlungszeitraum entfallender Anteil von Jahreswerten
		             auf ganze Cents abgerundet -->
		        <INTERNAL name="ANTEIL1" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Bemessungsgrundlage für Altersentlastungsbetrag in €, Cent
		             (2 Dezimalstellen) -->
		        <INTERNAL name="BMG" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Beitragsbemessungsgrenze in der gesetzlichen Krankenversicherung 
		        	und der sozialen Pflegeversicherung in Euro -->
		        <INTERNAL name="BBGKVPV" type="BigDecimal" default="new BigDecimal(0)"/>

		        <!-- allgemeine Beitragsbemessungsgrenze in der allgemeinen Renten-versicherung in Euro -->
		        <INTERNAL name="BBGRV" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Differenz zwischen ST1 und ST2 in EURO -->
		        <INTERNAL name="DIFF" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Entlastungsbetrag für Alleinerziehende in Euro -->
		        <INTERNAL name="EFA" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Versorgungsfreibetrag in €, Cent (2 Dezimalstellen) -->
		        <INTERNAL name="FVB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Versorgungsfreibetrag in €, Cent (2 Dezimalstellen) für die Berechnung
		             der Lohnsteuer für den sonstigen Bezug -->
			    <INTERNAL name="FVBSO" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zuschlag zum Versorgungsfreibetrag in EURO -->
		        <INTERNAL name="FVBZ" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zuschlag zum Versorgungsfreibetrag in EURO fuer die Berechnung
		             der Lohnsteuer beim sonstigen Bezug -->
			    <INTERNAL name="FVBZSO" type="BigDecimal" default="new BigDecimal(0)"/>
		 
		     	<!-- Grundfreibetrag in Euro -->
		        <INTERNAL name="GFB" type="BigDecimal" default="new BigDecimal(0)"/>
		 
		        <!-- Maximaler Altersentlastungsbetrag in € -->
		        <INTERNAL name="HBALTE" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Maßgeblicher maximaler Versorgungsfreibetrag in Euro, Cent (2 Dezimalstellen) -->
		        <INTERNAL name="HFVB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €,Cent
		             (2 Dezimalstellen) -->
		        <INTERNAL name="HFVBZ" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €, Cent
		             (2 Dezimalstellen) für die Berechnung der Lohnsteuer für den
		             sonstigen Bezug -->
		        <INTERNAL name="HFVBZSO" type="BigDecimal" default="new BigDecimal(0)"/>
				
				<!-- Zwischenfeld zu X fuer die Berechnung der Steuer nach § 39b
		             Abs. 2 Satz 7 EStG in € -->
		        <INTERNAL name="HOCH" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		         <!-- Nummer der Tabellenwerte fuer Versorgungsparameter -->
		        <INTERNAL name="J" type="int" default="0"/>
		
		        <!-- Jahressteuer nach § 51a EStG, aus der Solidaritaetszuschlag und
		             Bemessungsgrundlage fuer die Kirchenlohnsteuer ermittelt werden in EURO -->
		        <INTERNAL name="JBMG" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechneter LZZFREIB in €, Cent
		             (2 Dezimalstellen) -->
		        <INTERNAL name="JLFREIB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnete LZZHINZU in €, Cent
		             (2 Dezimalstellen) -->
		        <INTERNAL name="JLHINZU" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Jahreswert, dessen Anteil fuer einen Lohnzahlungszeitraum in
		             UPANTEIL errechnet werden soll in Cents -->
		        <INTERNAL name="JW" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Nummer der Tabellenwerte fuer Parameter bei Altersentlastungsbetrag -->
		        <INTERNAL name="K" type="int" default="0"/>
				 
		        <!-- Summe der Freibetraege fuer Kinder in EURO -->
		        <INTERNAL name="KFB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Beitragssatz des Arbeitgebers zur Krankenversicherung -->
		        <INTERNAL name="KVSATZAG" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Beitragssatz des Arbeitnehmers zur Krankenversicherung -->
		        <INTERNAL name="KVSATZAN" type="BigDecimal" default="new BigDecimal(0)"/>
		
		       <!-- Kennzahl fuer die Einkommensteuer-Tabellenart:
		             1 = Grundtabelle
		             2 = Splittingtabelle -->
		        <INTERNAL name="KZTAB" type="int" default="0"/>
		
		        <!-- Jahreslohnsteuer in EURO -->
		        <INTERNAL name="LSTJAHR" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zwischenfelder der Jahreslohnsteuer in Cent -->
		        <INTERNAL name="LSTOSO" type="BigDecimal" default="new BigDecimal(0)"/>
		        <INTERNAL name="LSTSO" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Mindeststeuer fuer die Steuerklassen V und VI in EURO -->
		        <INTERNAL name="MIST" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Beitragssatz des Arbeitgebers zur Pflegeversicherung (6 Dezimalstellen)-->
		        <INTERNAL name="PVSATZAG" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Beitragssatz des Arbeitnehmers zur Pflegeversicherung (6 Dezimalstellen)-->
		        <INTERNAL name="PVSATZAN" type="BigDecimal" default="new BigDecimal(0)"/>
		
				<!-- Beitragssatz des Arbeitnehmers in der allgemeinen gesetzlichen Rentenversicherung (4 Dezimalstellen)  -->
			    <INTERNAL name="RVSATZAN" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Rechenwert in Gleitkommadarstellung -->
		        <INTERNAL name="RW" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Sonderausgaben-Pauschbetrag in EURO -->
		        <INTERNAL name="SAP" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Freigrenze fuer den Solidaritaetszuschlag in EURO -->
		        <INTERNAL name="SOLZFREI" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Solidaritaetszuschlag auf die Jahreslohnsteuer in EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="SOLZJ" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zwischenwert fuer den Solidaritaetszuschlag auf die Jahreslohnsteuer
		             in EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="SOLZMIN" type="BigDecimal" default="new BigDecimal(0)"/>

		        <!-- Bemessungsgrundlage des Solidaritätszuschlags zur Prüfung der Freigrenze beim Solidaritätszuschlag für sonstige Bezüge in Euro -->
		        <INTERNAL name="SOLZSBMG" type="BigDecimal" default="new BigDecimal(0)"/>

		        <!-- Zu versteuerndes Einkommen für die Ermittlung der Bemessungsgrundlage des Solidaritätszuschlags zur Prüfung der Freigrenze beim Solidaritätszuschlag für sonstige Bezüge in Euro, Cent (2 Dezimalstellen) -->
		        <INTERNAL name="SOLZSZVE" type="BigDecimal" default="new BigDecimal(0)"/>

		        <!-- Bemessungsgrundlage des Solidaritätszuschlags für die Prüfung der Freigrenze beim Solidaritätszuschlag für die Vergütung für mehrjährige Tätigkeit in Euro -->
		        <INTERNAL name="SOLZVBMG" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Tarifliche Einkommensteuer in EURO -->
		        <INTERNAL name="ST" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Tarifliche Einkommensteuer auf das 1,25-fache ZX in EURO -->
		        <INTERNAL name="ST1" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Tarifliche Einkommensteuer auf das 0,75-fache ZX in EURO -->
		        <INTERNAL name="ST2" type="BigDecimal" default="new BigDecimal(0)"/>	
		 
		        <!-- Bemessungsgrundlage fuer den Versorgungsfreibetrag in Cents -->
		        <INTERNAL name="VBEZB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Bemessungsgrundlage für den Versorgungsfreibetrag in Cent für
		             den sonstigen Bezug -->
		        <INTERNAL name="VBEZBSO" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		         <!-- Zwischenfeld zu X fuer die Berechnung der Steuer nach § 39b
		             Abs. 2 Satz 7 EStG in € -->
		        <INTERNAL name="VERGL" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Hoechstbetrag der Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C -->
		        <INTERNAL name="VHB" type="BigDecimal" default="new BigDecimal(0)"/>
		
				<!-- Jahreswert der berücksichtigten Beiträge zur privaten Basis-Krankenversicherung und 
					  privaten Pflege-Pflichtversicherung (ggf. auch die Mindestvorsorgepauschale) in Cent. -->
		        <INTERNAL name="VKV" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Vorsorgepauschale in EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="VSP" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C -->
		        <INTERNAL name="VSPN" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zwischenwert 1 bei der Berechnung der Vorsorgepauschale nach
		             dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="VSP1" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zwischenwert 2 bei der Berechnung der Vorsorgepauschale nach
		             dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="VSP2" type="BigDecimal" default="new BigDecimal(0)"/>
				
				<!-- Vorsorgepauschale mit Teilbeträgen für die gesetzliche Kranken- und 
					 soziale Pflegeversicherung nach fiktiven Beträgen oder ggf. für die
					 private Basiskrankenversicherung und private Pflege-Pflichtversicherung 
					 in Euro, Cent (2 Dezimalstellen) -->
		        <INTERNAL name="VSP3" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Erster Grenzwert in Steuerklasse V/VI in Euro -->
		        <INTERNAL name="W1STKL5" type="BigDecimal" default="new BigDecimal(0)"/> 
		        
		        <!-- Zweiter Grenzwert in Steuerklasse V/VI in Euro -->
		        <INTERNAL name="W2STKL5" type="BigDecimal" default="new BigDecimal(0)"/> 
		        
		        <!-- Dritter Grenzwert in Steuerklasse V/VI in Euro -->
		        <INTERNAL name="W3STKL5" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zu versteuerndes Einkommen gem. § 32a Abs. 1 und 2 EStG €, C
		             (2 Dezimalstellen) -->
		        <INTERNAL name="X" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Gem. § 32a Abs. 1 EStG (6 Dezimalstellen) -->
		        <INTERNAL name="Y" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
		             nach Abzug der Freibeträge nach § 39 b Abs. 2 Satz 3 und 4. -->
		        <INTERNAL name="ZRE4" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen) -->
		        <INTERNAL name="ZRE4J" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
		             nach Abzug des Versorgungsfreibetrags und des Alterentlastungsbetrags
		             zur Berechnung der Vorsorgepauschale in €, Cent (2 Dezimalstellen) -->
		        <INTERNAL name="ZRE4VP" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Feste Tabellenfreibeträge (ohne Vorsorgepauschale) in €, Cent
		             (2 Dezimalstellen) -->
		        <INTERNAL name="ZTABFB" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnetes (VBEZ abzueglich FVB) in
		             EURO, C (2 Dezimalstellen) -->
		        <INTERNAL name="ZVBEZ" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Auf einen Jahreslohn hochgerechnetes VBEZ in €, C (2 Dezimalstellen) -->
		        <INTERNAL name="ZVBEZJ" type="BigDecimal" default="new BigDecimal(0)"/>
		
		        <!-- Zu versteuerndes Einkommen in €, C (2 Dezimalstellen) -->
		        <INTERNAL name="ZVE" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Zwischenfeld zu X fuer die Berechnung der Steuer nach § 39b
		             Abs. 2 Satz 7 EStG in € -->
		        <INTERNAL name="ZX" type="BigDecimal" default="new BigDecimal(0)"/>
		        
		        <!-- Zwischenfeld zu X fuer die Berechnung der Steuer nach § 39b
		             Abs. 2 Satz 7 EStG in € -->
		        <INTERNAL name="ZZX" type="BigDecimal" default="new BigDecimal(0)"/>

				

			</INTERNALS>
    </VARIABLES>

    <CONSTANTS>
        <!-- Tabelle fuer die Vomhundertsaetze des Versorgungsfreibetrags -->
        <!-- geändert für 2025 -->
        <CONSTANT name="TAB1" type="BigDecimal[]" value="{BigDecimal.valueOf(0), BigDecimal.valueOf( 0.4), BigDecimal.valueOf( 0.384), BigDecimal.valueOf( 0.368), BigDecimal.valueOf( 0.352), BigDecimal.valueOf( 0.336), BigDecimal.valueOf( 0.32), BigDecimal.valueOf( 0.304), BigDecimal.valueOf( 0.288), BigDecimal.valueOf( 0.272), BigDecimal.valueOf( 0.256), BigDecimal.valueOf( 0.24), BigDecimal.valueOf( 0.224), BigDecimal.valueOf( 0.208), BigDecimal.valueOf( 0.192), BigDecimal.valueOf( 0.176), BigDecimal.valueOf( 0.16), BigDecimal.valueOf( 0.152), BigDecimal.valueOf( 0.144), BigDecimal.valueOf( 0.14), BigDecimal.valueOf( 0.136), BigDecimal.valueOf( 0.132), BigDecimal.valueOf( 0.128), BigDecimal.valueOf( 0.124), BigDecimal.valueOf( 0.12), BigDecimal.valueOf( 0.116), BigDecimal.valueOf( 0.112), BigDecimal.valueOf( 0.108), BigDecimal.valueOf( 0.104), BigDecimal.valueOf( 0.1), BigDecimal.valueOf( 0.096), BigDecimal.valueOf( 0.092), BigDecimal.valueOf( 0.088), BigDecimal.valueOf( 0.084), BigDecimal.valueOf( 0.08), BigDecimal.valueOf( 0.076), BigDecimal.valueOf( 0.072), BigDecimal.valueOf( 0.068), BigDecimal.valueOf( 0.064), BigDecimal.valueOf( 0.06), BigDecimal.valueOf( 0.056), BigDecimal.valueOf( 0.052), BigDecimal.valueOf( 0.048), BigDecimal.valueOf( 0.044), BigDecimal.valueOf( 0.04), BigDecimal.valueOf( 0.036), BigDecimal.valueOf( 0.032), BigDecimal.valueOf( 0.028), BigDecimal.valueOf( 0.024), BigDecimal.valueOf( 0.02), BigDecimal.valueOf( 0.016), BigDecimal.valueOf( 0.012), BigDecimal.valueOf( 0.008), BigDecimal.valueOf( 0.004), BigDecimal.valueOf( 0)}"/>

        <!-- Tabelle fuer die Hoechstbetrage des Versorgungsfreibetrags -->
        <!-- geändert für 2025 -->
        <CONSTANT name="TAB2" type="BigDecimal[]" value="{BigDecimal.valueOf(0), BigDecimal.valueOf( 3000), BigDecimal.valueOf( 2880), BigDecimal.valueOf( 2760), BigDecimal.valueOf( 2640), BigDecimal.valueOf( 2520), BigDecimal.valueOf( 2400), BigDecimal.valueOf( 2280), BigDecimal.valueOf( 2160), BigDecimal.valueOf( 2040), BigDecimal.valueOf( 1920), BigDecimal.valueOf( 1800), BigDecimal.valueOf( 1680), BigDecimal.valueOf( 1560), BigDecimal.valueOf( 1440), BigDecimal.valueOf( 1320), BigDecimal.valueOf( 1200), BigDecimal.valueOf( 1140), BigDecimal.valueOf( 1080), BigDecimal.valueOf( 1050), BigDecimal.valueOf( 1020), BigDecimal.valueOf( 990), BigDecimal.valueOf( 960), BigDecimal.valueOf( 930), BigDecimal.valueOf( 900), BigDecimal.valueOf( 870), BigDecimal.valueOf( 840), BigDecimal.valueOf( 810), BigDecimal.valueOf( 780), BigDecimal.valueOf( 750), BigDecimal.valueOf( 720), BigDecimal.valueOf( 690), BigDecimal.valueOf( 660), BigDecimal.valueOf( 630), BigDecimal.valueOf( 600), BigDecimal.valueOf( 570), BigDecimal.valueOf( 540), BigDecimal.valueOf( 510), BigDecimal.valueOf( 480), BigDecimal.valueOf( 450), BigDecimal.valueOf( 420), BigDecimal.valueOf( 390), BigDecimal.valueOf( 360), BigDecimal.valueOf( 330), BigDecimal.valueOf( 300), BigDecimal.valueOf( 270), BigDecimal.valueOf( 240), BigDecimal.valueOf( 210), BigDecimal.valueOf( 180), BigDecimal.valueOf( 150), BigDecimal.valueOf( 120), BigDecimal.valueOf( 90), BigDecimal.valueOf( 60), BigDecimal.valueOf( 30), BigDecimal.valueOf( 0) }"/>

        <!-- Tabelle fuer die Zuschlaege zum Versorgungsfreibetrag -->
        <!-- geändert für 2025 -->
        <CONSTANT name="TAB3" type="BigDecimal[]" value="{BigDecimal.valueOf(0), BigDecimal.valueOf( 900), BigDecimal.valueOf( 864), BigDecimal.valueOf( 828), BigDecimal.valueOf( 792), BigDecimal.valueOf( 756), BigDecimal.valueOf( 720), BigDecimal.valueOf( 684), BigDecimal.valueOf( 648), BigDecimal.valueOf( 612), BigDecimal.valueOf( 576), BigDecimal.valueOf( 540), BigDecimal.valueOf( 504), BigDecimal.valueOf( 468), BigDecimal.valueOf( 432), BigDecimal.valueOf( 396), BigDecimal.valueOf( 360), BigDecimal.valueOf( 342), BigDecimal.valueOf( 324), BigDecimal.valueOf( 315), BigDecimal.valueOf( 306), BigDecimal.valueOf( 297), BigDecimal.valueOf( 288), BigDecimal.valueOf( 279), BigDecimal.valueOf( 270), BigDecimal.valueOf( 261), BigDecimal.valueOf( 252), BigDecimal.valueOf( 243), BigDecimal.valueOf( 234), BigDecimal.valueOf( 225), BigDecimal.valueOf( 216), BigDecimal.valueOf( 207), BigDecimal.valueOf( 198), BigDecimal.valueOf( 189), BigDecimal.valueOf( 180), BigDecimal.valueOf( 171), BigDecimal.valueOf( 162), BigDecimal.valueOf( 153), BigDecimal.valueOf( 144), BigDecimal.valueOf( 135), BigDecimal.valueOf( 126), BigDecimal.valueOf( 117), BigDecimal.valueOf( 108), BigDecimal.valueOf( 99), BigDecimal.valueOf( 90), BigDecimal.valueOf( 81), BigDecimal.valueOf( 72), BigDecimal.valueOf( 63), BigDecimal.valueOf( 54), BigDecimal.valueOf( 45), BigDecimal.valueOf( 36), BigDecimal.valueOf( 27), BigDecimal.valueOf( 18), BigDecimal.valueOf( 9), BigDecimal.valueOf( 0)}"/>

        <!-- Tabelle fuer die Vomhundertsaetze des Altersentlastungsbetrags -->
        <!-- geändert für 2025 -->
        <CONSTANT name="TAB4" type="BigDecimal[]" value="{BigDecimal.valueOf(0), BigDecimal.valueOf( 0.4), BigDecimal.valueOf( 0.384), BigDecimal.valueOf( 0.368), BigDecimal.valueOf( 0.352), BigDecimal.valueOf( 0.336), BigDecimal.valueOf( 0.32), BigDecimal.valueOf( 0.304), BigDecimal.valueOf( 0.288), BigDecimal.valueOf( 0.272), BigDecimal.valueOf( 0.256), BigDecimal.valueOf( 0.24), BigDecimal.valueOf( 0.224), BigDecimal.valueOf( 0.208), BigDecimal.valueOf( 0.192), BigDecimal.valueOf( 0.176), BigDecimal.valueOf( 0.16), BigDecimal.valueOf( 0.152), BigDecimal.valueOf( 0.144), BigDecimal.valueOf( 0.14), BigDecimal.valueOf( 0.136), BigDecimal.valueOf( 0.132), BigDecimal.valueOf( 0.128), BigDecimal.valueOf( 0.124), BigDecimal.valueOf( 0.12), BigDecimal.valueOf( 0.116), BigDecimal.valueOf( 0.112), BigDecimal.valueOf( 0.108), BigDecimal.valueOf( 0.104), BigDecimal.valueOf( 0.1), BigDecimal.valueOf( 0.096), BigDecimal.valueOf( 0.092), BigDecimal.valueOf( 0.088), BigDecimal.valueOf( 0.084), BigDecimal.valueOf( 0.08), BigDecimal.valueOf( 0.076), BigDecimal.valueOf( 0.072), BigDecimal.valueOf( 0.068), BigDecimal.valueOf( 0.064), BigDecimal.valueOf( 0.06), BigDecimal.valueOf( 0.056), BigDecimal.valueOf( 0.052), BigDecimal.valueOf( 0.048), BigDecimal.valueOf( 0.044), BigDecimal.valueOf( 0.04), BigDecimal.valueOf( 0.036), BigDecimal.valueOf( 0.032), BigDecimal.valueOf( 0.028), BigDecimal.valueOf( 0.024), BigDecimal.valueOf( 0.02), BigDecimal.valueOf( 0.016), BigDecimal.valueOf( 0.012), BigDecimal.valueOf( 0.008), BigDecimal.valueOf( 0.004), BigDecimal.valueOf( 0)}"/>

        <!-- Tabelle fuer die Hoechstbetraege des Altersentlastungsbetrags -->
        <!-- geändert für 2025 -->
        <CONSTANT name="TAB5" type="BigDecimal[]" value="{BigDecimal.valueOf(0), BigDecimal.valueOf( 1900), BigDecimal.valueOf( 1824), BigDecimal.valueOf( 1748), BigDecimal.valueOf( 1672), BigDecimal.valueOf( 1596), BigDecimal.valueOf( 1520), BigDecimal.valueOf( 1444), BigDecimal.valueOf( 1368), BigDecimal.valueOf( 1292), BigDecimal.valueOf( 1216), BigDecimal.valueOf( 1140), BigDecimal.valueOf( 1064), BigDecimal.valueOf( 988), BigDecimal.valueOf( 912), BigDecimal.valueOf( 836), BigDecimal.valueOf( 760), BigDecimal.valueOf( 722), BigDecimal.valueOf( 684), BigDecimal.valueOf( 665), BigDecimal.valueOf( 646), BigDecimal.valueOf( 627), BigDecimal.valueOf( 608), BigDecimal.valueOf( 589), BigDecimal.valueOf( 570), BigDecimal.valueOf( 551), BigDecimal.valueOf( 532), BigDecimal.valueOf( 513), BigDecimal.valueOf( 494), BigDecimal.valueOf( 475), BigDecimal.valueOf( 456), BigDecimal.valueOf( 437), BigDecimal.valueOf( 418), BigDecimal.valueOf( 399), BigDecimal.valueOf( 380), BigDecimal.valueOf( 361), BigDecimal.valueOf( 342), BigDecimal.valueOf( 323), BigDecimal.valueOf( 304), BigDecimal.valueOf( 285), BigDecimal.valueOf( 266), BigDecimal.valueOf( 247), BigDecimal.valueOf( 228), BigDecimal.valueOf( 209), BigDecimal.valueOf( 190), BigDecimal.valueOf( 171), BigDecimal.valueOf( 152), BigDecimal.valueOf( 133), BigDecimal.valueOf( 114), BigDecimal.valueOf( 95), BigDecimal.valueOf( 76), BigDecimal.valueOf( 57), BigDecimal.valueOf( 38), BigDecimal.valueOf( 19), BigDecimal.valueOf( 0)}"/>
 
        <!-- Zahlenkonstanten fuer im Plan oft genutzte BigDecimal Werte -->
        <CONSTANT name="ZAHL1" 		type="BigDecimal" value="BigDecimal.ONE"/>
        <CONSTANT name="ZAHL2" 		type="BigDecimal" value="new BigDecimal(2)"/>
        <CONSTANT name="ZAHL5" 		type="BigDecimal" value="new BigDecimal(5)"/>
        <CONSTANT name="ZAHL7" 		type="BigDecimal" value="new BigDecimal(7)"/>
        <CONSTANT name="ZAHL12" 	type="BigDecimal" value="new BigDecimal(12)"/>
        <CONSTANT name="ZAHL100" 	type="BigDecimal" value="new BigDecimal(100)"/>
        <CONSTANT name="ZAHL360" 	type="BigDecimal" value="new BigDecimal(360)"/>
        <CONSTANT name="ZAHL500" 	type="BigDecimal" value="new BigDecimal(500)"/>
        <CONSTANT name="ZAHL700" 	type="BigDecimal" value="new BigDecimal(700)"/>
        <CONSTANT name="ZAHL1000" 	type="BigDecimal" value="new BigDecimal(1000)"/>
        <CONSTANT name="ZAHL10000" 	type="BigDecimal" value="new BigDecimal(10000)"/>

    </CONSTANTS>

    <METHODS>



  <!-- PROGRAMMABLAUFPLAN, PAP Seite 13 -->
  <MAIN>
  	<EXECUTE method="MPARA"/> 
    <EXECUTE method="MRE4JL"/>
    <EVAL exec="VBEZBSO= BigDecimal.ZERO"/>
    
    <EXECUTE method="MRE4"/>
    <EXECUTE method="MRE4ABZ"/>
    <EXECUTE method="MBERECH"/>
    
    <EXECUTE method="MSONST"/>
  </MAIN>

  <!-- Zuweisung von Werten für bestimmte Sozialversicherungsparameter  PAP Seite 14 -->
  <METHOD name="MPARA">
  	 <IF expr="KRV &lt; 1"><!-- &lt; = < -->
      	<THEN>
	      	<EVAL exec="BBGRV = new BigDecimal(96600)"/>  <!-- Geändert für 2025 -->
      		<EVAL exec="RVSATZAN = BigDecimal.valueOf(0.093)"/> 
      	</THEN>
      	<ELSE>
        	<!-- Nichts zu tun -->
     	</ELSE>
     </IF>
       
        <EVAL exec="BBGKVPV = new BigDecimal(66150)"/> <!-- Geändert für 2025 -->
      	<EVAL exec="KVSATZAN = (KVZ.divide(ZAHL2).divide(ZAHL100)).add(BigDecimal.valueOf(0.07))"/>
      	<EVAL exec="KVSATZAG = BigDecimal.valueOf(0.0125).add(BigDecimal.valueOf(0.07))"/> <!-- geändert für 2025 -->
      	
      	<IF expr="PVS == 1">
      		<THEN>
      			<EVAL exec="PVSATZAN = BigDecimal.valueOf(0.023)"/> <!-- geändert für 2025 --> 
      			<EVAL exec="PVSATZAG = BigDecimal.valueOf(0.013)"/> <!-- geändert für 2025 -->
      		</THEN>
      		<ELSE>
        		<EVAL exec="PVSATZAN =  BigDecimal.valueOf(0.018)"/> 
        		<EVAL exec="PVSATZAG =  BigDecimal.valueOf(0.018)"/> <!-- geändert für 2025 --> 
      		</ELSE>
      	</IF>
      	<IF expr="PVZ == 1">
      		<THEN>
      			<EVAL exec="PVSATZAN = PVSATZAN.add(BigDecimal.valueOf(0.006))"/> 
      		</THEN>
      		<ELSE>
      			<EVAL exec="PVSATZAN = PVSATZAN.subtract(PVA.multiply(BigDecimal.valueOf(0.0025)))"/> 
      		</ELSE>
      	</IF>
      	
      	 <EVAL exec="W1STKL5 = new BigDecimal(13432)"/>    <!-- geändert für 2025 -->  
      	 <EVAL exec="W2STKL5 = new BigDecimal(33380)"/> <!-- geändert für 2025 -->
      	 <EVAL exec="W3STKL5 = new BigDecimal(222260)"/>
      	 <EVAL exec="GFB = new BigDecimal(11784)"/> 
      	 <EVAL exec="SOLZFREI = new BigDecimal(18130)"/>
     
  </METHOD>

  <!-- Ermittlung des Jahresarbeitslohns nach § 39 b Abs. 2 Satz 2 EStG, PAP Seite 15 -->
  <METHOD name="MRE4JL">
    <IF expr="LZZ == 1">
      <THEN>
        <EVAL exec="ZRE4J= RE4.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="ZVBEZJ= VBEZ.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="JLFREIB= LZZFREIB.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="JLHINZU= LZZHINZU.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
      </THEN>
      <ELSE>
        <IF expr="LZZ == 2">
          <THEN>
            <EVAL exec="ZRE4J= (RE4.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
            <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
            <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
            <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
          </THEN>
          <ELSE>
            <IF expr="LZZ == 3">
              <THEN>
                <EVAL exec="ZRE4J= (RE4.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)"/>
              </THEN>
              <ELSE>
                <EVAL exec="ZRE4J= (RE4.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
                <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
    <IF expr="af == 0">
		<THEN>
			<EVAL exec="f= 1"/>
		</THEN>
    </IF>
  </METHOD>

  <!-- Freibeträge für Versorgungsbezüge, Altersentlastungsbetrag (§ 39b Abs. 2 Satz 3 EStG), PAP Seite 16 -->
  <METHOD name="MRE4">
    <IF expr="ZVBEZJ.compareTo (BigDecimal.ZERO) == 0">
      <THEN>
        <EVAL exec="FVBZ= BigDecimal.ZERO"/>
        <EVAL exec="FVB= BigDecimal.ZERO"/>
        <EVAL exec="FVBZSO= BigDecimal.ZERO"/>
        <EVAL exec="FVBSO= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
        <IF expr="VJAHR &lt; 2006">
          <THEN>
            <EVAL exec="J= 1"/>
          </THEN>
          <ELSE>
            <IF expr="VJAHR &lt; 2058"> <!-- geändert für 2025 -->
              <THEN>
                <EVAL exec="J= VJAHR - 2004"/>
              </THEN>
              <ELSE>
                <EVAL exec="J= 54"/> <!-- geändert für 2025 -->
              </ELSE>
            </IF>
          </ELSE>
        </IF>
        <IF expr="LZZ == 1">
          <THEN>
            <EVAL exec="VBEZB= (VBEZM.multiply (BigDecimal.valueOf (ZMVB))).add (VBEZS)"/>
            <EVAL exec="HFVB= TAB2[J].divide (ZAHL12).multiply (BigDecimal.valueOf (ZMVB)).setScale (0, BigDecimal.ROUND_UP)"/> <!-- geändert für 2025 -->
            <EVAL exec="FVBZ= TAB3[J].divide (ZAHL12).multiply (BigDecimal.valueOf (ZMVB)).setScale (0, BigDecimal.ROUND_UP)"/>
          </THEN> 
          <ELSE>
            <EVAL exec="VBEZB= ((VBEZM.multiply (ZAHL12)).add (VBEZS)).setScale (2, BigDecimal.ROUND_DOWN)"/>
            <EVAL exec="HFVB= TAB2[J]"/>
            <EVAL exec="FVBZ= TAB3[J]"/>
          </ELSE>
        </IF>
        <EVAL exec="FVB= ((VBEZB.multiply (TAB1[J]))).divide (ZAHL100).setScale (2, BigDecimal.ROUND_UP)"/>
        <IF expr="FVB.compareTo (HFVB) == 1">
          <THEN>
            <EVAL exec="FVB = HFVB"/>
          </THEN>
        </IF>
        
        <IF expr="FVB.compareTo (ZVBEZJ) == 1">
          <THEN>
            <EVAL exec="FVB = ZVBEZJ"/>
          </THEN>
        </IF>
        
        <EVAL exec="FVBSO= (FVB.add((VBEZBSO.multiply (TAB1[J])).divide (ZAHL100))).setScale (2, BigDecimal.ROUND_UP)"/>
        <IF expr="FVBSO.compareTo (TAB2[J]) == 1">
          <THEN>
            <EVAL exec="FVBSO = TAB2[J]"/>
          </THEN> 
        </IF>
        <EVAL exec="HFVBZSO= (((VBEZB.add(VBEZBSO)).divide (ZAHL100)).subtract (FVBSO)).setScale (2, BigDecimal.ROUND_DOWN)"/>        
        <EVAL exec="FVBZSO= (FVBZ.add((VBEZBSO).divide (ZAHL100))).setScale (0, BigDecimal.ROUND_UP)"/>
        <IF expr="FVBZSO.compareTo (HFVBZSO) == 1">
          <THEN>
            <EVAL exec="FVBZSO = HFVBZSO.setScale(0, BigDecimal.ROUND_UP)"/>
          </THEN>
        </IF>
        <IF expr="FVBZSO.compareTo (TAB3[J]) == 1">
          <THEN>
            <EVAL exec="FVBZSO = TAB3[J]"/>
          </THEN>
        </IF> 
        <EVAL exec="HFVBZ= ((VBEZB.divide (ZAHL100)).subtract (FVB)).setScale (2, BigDecimal.ROUND_DOWN)"/>
        <IF expr="FVBZ.compareTo (HFVBZ) == 1">
          <THEN>
            <EVAL exec="FVBZ = HFVBZ.setScale (0, BigDecimal.ROUND_UP)"/>
          </THEN>
        </IF>
      </ELSE>
    </IF>
    <EXECUTE method="MRE4ALTE"/>
  </METHOD>

  <!-- Altersentlastungsbetrag (§ 39b Abs. 2 Satz 3 EStG), PAP Seite 17 -->
  <METHOD name="MRE4ALTE">
    <IF expr="ALTER1 == 0">
      <THEN>
        <EVAL exec="ALTE= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
        <IF expr="AJAHR &lt; 2006">
          <THEN>
            <EVAL exec="K= 1"/>
          </THEN>
          <ELSE>
            <IF expr="AJAHR &lt; 2058"> <!-- geändert für 2025 -->
              <THEN>
                <EVAL exec="K= AJAHR - 2004"/>
              </THEN>
              <ELSE>
                <EVAL exec="K= 54"/> <!-- geändert für 2025 -->
              </ELSE>
            </IF>
          </ELSE>
        </IF>
        <EVAL exec="BMG= ZRE4J.subtract (ZVBEZJ)"/>
        <!-- Lt. PAP muss hier auf ganze EUR gerundet werden -->
        <EVAL exec="ALTE = (BMG.multiply(TAB4[K])).setScale(0, BigDecimal.ROUND_UP)"/>
        <EVAL exec="HBALTE= TAB5[K]"/>
        <IF expr="ALTE.compareTo (HBALTE) == 1">
          <THEN>
            <EVAL exec="ALTE= HBALTE"/>
          </THEN>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Ermittlung des Jahresarbeitslohns nach Abzug der Freibeträge nach § 39 b Abs. 2 Satz 3 und 4 EStG, PAP Seite 20 -->
  <METHOD name="MRE4ABZ"> 
  	<EVAL exec="ZRE4= (ZRE4J.subtract (FVB).subtract   (ALTE).subtract (JLFREIB).add (JLHINZU)).setScale (2, BigDecimal.ROUND_DOWN)"/>
  	<IF expr="ZRE4.compareTo (BigDecimal.ZERO) == -1"> 
  		<THEN> 
  			<EVAL exec="ZRE4= BigDecimal.ZERO"/> 
  		</THEN> 
  	</IF> 
  	<EVAL exec="ZRE4VP= ZRE4J"/>

    <EVAL exec="ZVBEZ = ZVBEZJ.subtract(FVB).setScale(2, BigDecimal.ROUND_DOWN)"/>

    <IF expr="ZVBEZ.compareTo(BigDecimal.ZERO) == -1"> 
    	<THEN> 
    		<EVAL exec="ZVBEZ = BigDecimal.ZERO"/> 
    	</THEN> 
    </IF> 
  </METHOD>

  <!-- Berechnung fuer laufende Lohnzahlungszeitraueme Seite 21-->
  <METHOD name="MBERECH"> 

    <EXECUTE method="MZTABFB"/> 
    <EVAL exec="VFRB = ((ANP.add(FVB.add(FVBZ))).multiply(ZAHL100)).setScale(0, BigDecimal.ROUND_DOWN)"/>
    <EXECUTE method="MLSTJAHR"/>
    
    <EVAL exec="WVFRB = ((ZVE.subtract(GFB)).multiply(ZAHL100)).setScale(0, BigDecimal.ROUND_DOWN)"/> 
    <IF expr="WVFRB.compareTo(BigDecimal.ZERO) == -1">  <!-- WVFRB < 0 -->
    	<THEN> 
    		<EVAL exec="WVFRB = BigDecimal.valueOf(0)"/> 
    	</THEN> 
    </IF> 
    
    
	<EVAL exec="LSTJAHR = (ST.multiply(BigDecimal.valueOf(f))).setScale(0,BigDecimal.ROUND_DOWN)"/> 
	<EXECUTE method="UPLSTLZZ"/>
	<EXECUTE method="UPVKVLZZ"/>
	   	
	 <IF expr="ZKF.compareTo(BigDecimal.ZERO) == 1">  <!-- ZKF > 0 -->
	    <THEN> 
	    	  <EVAL exec="ZTABFB = ZTABFB.add(KFB)"/> 
	    	  <EXECUTE method="MRE4ABZ"/>
	    	  <EXECUTE method="MLSTJAHR"/>
	    	  <EVAL exec="JBMG = (ST.multiply(BigDecimal.valueOf(f))).setScale(0,BigDecimal.ROUND_DOWN)"/> 
	    </THEN> 
	    <ELSE>
	          <EVAL exec="JBMG = LSTJAHR"/> 
	    </ELSE>
	  </IF> 
	  
	  <EXECUTE method="MSOLZ"/>
	    
  </METHOD>

  <!-- Ermittlung der festen Tabellenfreibeträge (ohne Vorsorgepauschale), PAP Seite 22 -->
  <METHOD name="MZTABFB"> 
    <EVAL exec="ANP= BigDecimal.ZERO"/>
    <IF expr="ZVBEZ.compareTo (BigDecimal.ZERO) &gt;= 0 &amp;&amp; ZVBEZ.compareTo(FVBZ) == -1">
      <THEN>
        <EVAL exec="FVBZ = BigDecimal.valueOf(ZVBEZ.longValue())"/>
      </THEN>
    </IF>
    <IF expr="STKL &lt; 6">
      <THEN>
        <IF expr="ZVBEZ.compareTo (BigDecimal.ZERO) == 1">
          <THEN>
            <IF expr="(ZVBEZ.subtract (FVBZ)).compareTo (BigDecimal.valueOf (102)) == -1">
              <THEN>
                <EVAL exec="ANP= (ZVBEZ.subtract (FVBZ)).setScale (0, BigDecimal.ROUND_UP)"/>
              </THEN>
              <ELSE>
                <EVAL exec="ANP= BigDecimal.valueOf (102)"/>
              </ELSE>
            </IF>
          </THEN>
        </IF>
      </THEN>
      <ELSE>
      	<EVAL exec="FVBZ= BigDecimal.valueOf (0)"/>
      	<EVAL exec="FVBZSO= BigDecimal.valueOf (0)"/>
      </ELSE>
    </IF>
    <IF expr="STKL &lt; 6">
      <THEN>
      	<IF expr="ZRE4.compareTo(ZVBEZ) == 1">
        	<THEN>
	        	<IF expr="ZRE4.subtract(ZVBEZ).compareTo(BigDecimal.valueOf(1230)) == -1"> 
		        	<THEN>
		        		<EVAL exec="ANP = ANP.add(ZRE4).subtract(ZVBEZ).setScale(0,BigDecimal.ROUND_UP)"/>
		        	</THEN>
	        		<ELSE>
	        			<EVAL exec="ANP = ANP.add(BigDecimal.valueOf(1230))"/> 
	        		</ELSE>
	        	</IF>
        	</THEN>
        </IF>
      </THEN>
    </IF>
    <EVAL exec="KZTAB= 1"/>
    <IF expr="STKL == 1">
      <THEN>
        <EVAL exec="SAP= BigDecimal.valueOf (36)"/>
        <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (9540))).setScale (0, BigDecimal.ROUND_DOWN)"/> <!-- geändert für 2025 -->
      </THEN>
	  <ELSE>
			<IF expr="STKL == 2">
			    <THEN>
			        <EVAL exec="EFA= BigDecimal.valueOf (4260)"/> 
			        <EVAL exec="SAP= BigDecimal.valueOf (36)"/>
			        <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (9540))).setScale (0, BigDecimal.ROUND_DOWN)"/> <!-- geändert für 2025 -->
			    </THEN>
		 
		    	<ELSE>
					<IF expr="STKL == 3">
					    <THEN>
					        <EVAL exec="KZTAB= 2"/>
					        <EVAL exec="SAP= BigDecimal.valueOf (36)"/>
					        <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (9540))).setScale (0, BigDecimal.ROUND_DOWN)"/> <!-- geändert für 2025 -->
					    </THEN>
					
						<ELSE>
						  	<IF expr="STKL == 4">
						      <THEN>
						        <EVAL exec="SAP= BigDecimal.valueOf (36)"/>
						        <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (4770))).setScale (0, BigDecimal.ROUND_DOWN)"/> <!-- geändert für 2025 -->
						      </THEN> 
								
							  <ELSE>
								  	<IF expr="STKL == 5">
								      <THEN>
								        <EVAL exec="SAP= BigDecimal.valueOf (36)"/>
								        <EVAL exec="KFB= BigDecimal.ZERO"/>
								      </THEN> 
										
									  <ELSE>
								        <EVAL exec="KFB= BigDecimal.ZERO"/>
									  </ELSE>
									</IF>
							 </ELSE>
							</IF>
						</ELSE>	
					</IF>  	
				</ELSE>	
			</IF>	
		</ELSE>	
    </IF>
    <EVAL exec="ZTABFB= (EFA.add (ANP).add (SAP).add (FVBZ)).setScale (2, BigDecimal.ROUND_DOWN)"/>
  </METHOD>

  <!-- Ermittlung Jahreslohnsteuer, PAP Seite 23 -->
  <METHOD name="MLSTJAHR">
     <EXECUTE method="UPEVP"/>

     <EVAL exec="ZVE= ZRE4.subtract (ZTABFB).subtract(VSP)"/> <!-- geändert für 2025 -->

     <EXECUTE method="UPMLST"/>
  </METHOD>
  
  <!-- PAP Seite 24 --> 
  <METHOD name="UPVKVLZZ">
	 <EXECUTE method="UPVKV"/>
	 <EVAL exec="JW = VKV"/>
	 <EXECUTE method="UPANTEIL"/>
	 <EVAL exec="VKVLZZ = ANTEIL1"/>
  </METHOD>

  <!-- PAP Seite 24 --> 
  <METHOD name="UPVKV">
	 <IF expr="PKV &gt; 0">
		<THEN>
			<IF expr="VSP2.compareTo(VSP3) == 1">
				<THEN>
					<EVAL exec="VKV = VSP2.multiply(ZAHL100)"/>
				</THEN>
				<ELSE>
					<EVAL exec="VKV = VSP3.multiply(ZAHL100)"/>
				</ELSE>
			</IF>
		</THEN>
		<ELSE>
			<EVAL exec="VKV = BigDecimal.ZERO"/>
		</ELSE>
	</IF>
  </METHOD>
  
  <!-- PAP Seite 25 -->
   <METHOD name="UPLSTLZZ">
   	  <EVAL exec="JW = LSTJAHR.multiply(ZAHL100)"/>  
	  <EXECUTE method="UPANTEIL"/>
	  <EVAL exec="LSTLZZ = ANTEIL1"/>
   </METHOD>
	
  <!-- Ermittlung der Jahreslohnsteuer aus dem Einkommensteuertarif. PAP Seite 26 -->
  <METHOD name="UPMLST">
	<IF expr="ZVE.compareTo (ZAHL1) == -1">
      <THEN>
        <EVAL exec="ZVE= BigDecimal.ZERO"/>
        <EVAL exec="X= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
        <EVAL exec="X= (ZVE.divide (BigDecimal.valueOf(KZTAB))).setScale (0, BigDecimal.ROUND_DOWN)"/>
      </ELSE>
    </IF>
	<IF expr="STKL &lt; 5">
      <THEN>
      	 <EXECUTE method="UPTAB24"/>
      </THEN>
      <ELSE>
        <EXECUTE method="MST5_6"/>
      </ELSE>
    </IF>
  </METHOD>	  

  <!-- 	Vorsorgepauschale (§ 39b Absatz 2 Satz 5 Nummer 3 und Absatz 4 EStG) PAP Seite 27  -->
  <METHOD name="UPEVP">
    <IF expr="KRV == 1">
      <THEN>
        <EVAL exec="VSP1= BigDecimal.ZERO"/>
      </THEN>
		<ELSE>  
		    <IF expr="ZRE4VP.compareTo(BBGRV) == 1">
      			<THEN>
      				<EVAL exec="ZRE4VP = BBGRV"/>
      			</THEN>
      		</IF>
      		<EVAL exec="VSP1 = (ZRE4VP.multiply(RVSATZAN)).setScale(2,BigDecimal.ROUND_DOWN)"/>
	    </ELSE>
    </IF>
    <EVAL exec="VSP2 = (ZRE4VP.multiply(BigDecimal.valueOf(0.12))).setScale(2,BigDecimal.ROUND_DOWN)"/>
    <IF expr="STKL == 3">
	    <THEN>
	        <EVAL exec="VHB = BigDecimal.valueOf(3000)"/>
	    </THEN>
	    <ELSE>
	        <EVAL exec="VHB = BigDecimal.valueOf(1900)"/>
	    </ELSE>
     </IF>
    <IF expr="VSP2.compareTo (VHB) == 1">
      <THEN>
        <EVAL exec="VSP2= VHB"/>
      </THEN>
    </IF>
    <EVAL exec="VSPN= (VSP1.add (VSP2)).setScale (0, BigDecimal.ROUND_UP)"/>
    <EXECUTE method="MVSP"/>
    <IF expr="VSPN.compareTo (VSP) == 1">
      <THEN>
        <EVAL exec="VSP= VSPN.setScale (2, BigDecimal.ROUND_DOWN)"/>
      </THEN>
    </IF>
  </METHOD>
 
  <!-- Vorsorgepauschale (§39b Abs. 2 Satz 5 Nr 3 EStG) Vergleichsberechnung fuer Guenstigerpruefung, PAP Seite 28 -->
  <METHOD name="MVSP">
    <IF expr="ZRE4VP.compareTo(BBGKVPV) == 1">
      <THEN>
	  	<EVAL exec="ZRE4VP = BBGKVPV"/>
	  </THEN>
    </IF>

    <IF expr="PKV &gt; 0">
      <THEN>
			    <IF expr="STKL == 6">
			      <THEN>
						<EVAL exec="VSP3 = BigDecimal.ZERO"/>
				  </THEN>
				  <ELSE>
				    	<EVAL exec="VSP3 = PKPV.multiply(ZAHL12).divide(ZAHL100)"/>
						<IF expr="PKV == 2">
						    <THEN>
									<EVAL exec="VSP3 = VSP3.subtract( ZRE4VP.multiply( KVSATZAG.add(PVSATZAG))).setScale(2,BigDecimal.ROUND_DOWN)"/>
							</THEN>	    		
						</IF>
				  </ELSE>
			    </IF>
	    </THEN>
	    <ELSE>
				<EVAL exec="VSP3 = ZRE4VP.multiply(KVSATZAN.add(PVSATZAN)).setScale(2, BigDecimal.ROUND_DOWN)"/>
	    </ELSE>
    </IF>
		<EVAL exec="VSP = VSP3.add(VSP1).setScale(0, BigDecimal.ROUND_UP)"/>
  </METHOD>

  <!-- Lohnsteuer fuer die Steuerklassen V und VI (§ 39b Abs. 2 Satz 7 EStG), PAP Seite 29 -->
  <METHOD name="MST5_6">
    <EVAL exec="ZZX= X"/>
    <IF expr="ZZX.compareTo(W2STKL5) == 1">
      <THEN>
        <EVAL exec="ZX= W2STKL5"/>
        <EXECUTE method="UP5_6"/>
	    <IF expr="ZZX.compareTo (W3STKL5) == 1">
	      <THEN>
            <EVAL exec="ST= (ST.add ((W3STKL5.subtract (W2STKL5)).multiply (BigDecimal.valueOf (0.42)))).setScale (0, BigDecimal.ROUND_DOWN)"/>
            <EVAL exec="ST= (ST.add ((ZZX.subtract (W3STKL5)).multiply (BigDecimal.valueOf (0.45)))).setScale (0, BigDecimal.ROUND_DOWN)"/>
          </THEN>
          <ELSE>
            <EVAL exec="ST= (ST.add ((ZZX.subtract (W2STKL5)).multiply (BigDecimal.valueOf (0.42)))).setScale (0, BigDecimal.ROUND_DOWN)"/>
          </ELSE>
        </IF>
      </THEN>
      <ELSE>
        <EVAL exec="ZX= ZZX"/>
        <EXECUTE method="UP5_6"/>
        <IF expr="ZZX.compareTo (W1STKL5) == 1"> 
          <THEN>
            <EVAL exec="VERGL= ST"/>
            <EVAL exec="ZX= W1STKL5"/> 
            <EXECUTE method="UP5_6"/>
            <EVAL exec="HOCH= (ST.add ((ZZX.subtract (W1STKL5)).multiply (BigDecimal.valueOf (0.42)))).setScale (0, BigDecimal.ROUND_DOWN)"/>
            <IF expr="HOCH.compareTo (VERGL) == -1">
              <THEN>
                <EVAL exec="ST= HOCH"/>
              </THEN>
              <ELSE>
                <EVAL exec="ST= VERGL"/>
              </ELSE>
            </IF>
          </THEN>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Unterprogramm zur Lohnsteuer fuer die Steuerklassen V und VI (§ 39b Abs. 2 Satz 7 EStG), PAP Seite 30 -->
  <METHOD name="UP5_6">
    <EVAL exec="X= (ZX.multiply (BigDecimal.valueOf (1.25))).setScale (2, BigDecimal.ROUND_DOWN)"/>
    
   	<EXECUTE method="UPTAB24"/>
    
    <EVAL exec="ST1= ST"/>
    <EVAL exec="X= (ZX.multiply (BigDecimal.valueOf (0.75))).setScale (2, BigDecimal.ROUND_DOWN)"/>
    
   	<EXECUTE method="UPTAB24"/>
    
    <EVAL exec="ST2= ST"/>
    <EVAL exec="DIFF= (ST1.subtract (ST2)).multiply (ZAHL2)"/>
    <EVAL exec="MIST= (ZX.multiply (BigDecimal.valueOf (0.14))).setScale (0, BigDecimal.ROUND_DOWN)"/>
    <IF expr="MIST.compareTo (DIFF) == 1">
      <THEN>
        <EVAL exec="ST= MIST"/>
      </THEN>
      <ELSE>
        <EVAL exec="ST= DIFF"/>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Solidaritaetszuschlag, PAP Seite 31 -->
  <METHOD name="MSOLZ">
    <EVAL exec="SOLZFREI = (SOLZFREI.multiply(BigDecimal.valueOf(KZTAB)))"/> 
    <IF expr="JBMG.compareTo (SOLZFREI) == 1">
      <THEN>
        <EVAL exec="SOLZJ= (JBMG.multiply (BigDecimal.valueOf (5.5))).divide(ZAHL100).setScale(2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="SOLZMIN= (JBMG.subtract (SOLZFREI)).multiply (BigDecimal.valueOf (11.9)).divide (ZAHL100).setScale (2, BigDecimal.ROUND_DOWN)"/> 
        <IF expr="SOLZMIN.compareTo (SOLZJ) == -1">
          <THEN>
            <EVAL exec="SOLZJ= SOLZMIN"/>
          </THEN>
        </IF>
        <EVAL exec="JW= SOLZJ.multiply (ZAHL100).setScale (0, BigDecimal.ROUND_DOWN)"/>
                
        <EXECUTE method="UPANTEIL"/>
        
        <EVAL exec="SOLZLZZ= ANTEIL1"/>
      </THEN>
      <ELSE>
        <EVAL exec="SOLZLZZ= BigDecimal.ZERO"/>
      </ELSE>
    </IF>
    <IF expr="R &gt; 0">
      <THEN>
        <EVAL exec="JW= JBMG.multiply (ZAHL100)"/>        
        
        <EXECUTE method="UPANTEIL"/>
        <EVAL exec="BK= ANTEIL1"/>
      </THEN>
      <ELSE>
        <EVAL exec="BK= BigDecimal.ZERO"/>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Anteil von Jahresbetraegen fuer einen LZZ (§ 39b Abs. 2 Satz 9 EStG), PAP Seite 32 -->
  <METHOD name="UPANTEIL">
    <IF expr="LZZ == 1">
      <THEN>
        <EVAL exec="ANTEIL1= JW"/>
      </THEN>
      <ELSE>
        <IF expr="LZZ == 2">
          <THEN>
            <EVAL exec="ANTEIL1= JW.divide (ZAHL12, 0, BigDecimal.ROUND_DOWN)"/>
          </THEN>
          <ELSE>
            <IF expr="LZZ == 3">
              <THEN> 
                <EVAL exec="ANTEIL1= (JW.multiply (ZAHL7)).divide (ZAHL360, 0, BigDecimal.ROUND_DOWN)"/>
              </THEN>
              <ELSE>
                <EVAL exec="ANTEIL1= JW.divide (ZAHL360, 0, BigDecimal.ROUND_DOWN)"/>
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Berechnung sonstiger Bezuege nach § 39b Abs. 3 Saetze 1 bis 8 EStG), PAP Seite 33 -->
  <METHOD name="MSONST">
    <EVAL exec="LZZ= 1"/>
    <IF expr="ZMVB == 0">
      <THEN>
        <EVAL exec="ZMVB= 12"/>
      </THEN>
    </IF>
    <IF expr="SONSTB.compareTo (BigDecimal.ZERO) == 0 &amp;&amp; MBV.compareTo (BigDecimal.ZERO) == 0">
      <THEN>
        <EVAL exec="VKVSONST= BigDecimal.ZERO"/>
        <EVAL exec="LSTSO= BigDecimal.ZERO"/>
        <EVAL exec="STS= BigDecimal.ZERO"/>
        <EVAL exec="SOLZS= BigDecimal.ZERO"/>
        <EVAL exec="BKS= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
        <EXECUTE method="MOSONST"/>
        <EXECUTE method="UPVKV"/>
        <EVAL exec="VKVSONST = VKV"/>
        <EVAL exec="ZRE4J= ((JRE4.add (SONSTB)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="ZVBEZJ= ((JVBEZ.add (VBS)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)"/>
        <EVAL exec="VBEZBSO= STERBE"/>
        <EXECUTE method="MRE4SONST"/>
        <EXECUTE method="MLSTJAHR"/>
        
         <EVAL exec="WVFRBM = (ZVE.subtract(GFB)).multiply(ZAHL100).setScale(2,BigDecimal.ROUND_DOWN)"/>
         <IF expr="WVFRBM.compareTo(BigDecimal.ZERO) == -1"> <!-- WVFRBM < 0 -->
          <THEN>
            <EVAL exec="WVFRBM = BigDecimal.ZERO"/>
          </THEN>
        </IF>
        
        <EXECUTE method="UPVKV"/>
        <EVAL exec="VKVSONST = VKV.subtract(VKVSONST)"/>
        <EVAL exec="LSTSO= ST.multiply (ZAHL100)"/>
        
		<!-- lt. PAP:  "Hinweis: negative Zahlen werden nach ihrem Betrag gerundet!" --> 
        <!-- Fallunterscheidung bzgl. negativer Zahlen nicht nötig, da die Java-Klasse BigDecimal.ROUND_DOWN  -->
        <!-- die Ziffer und nicht die Zahl abrundet, also aus -4.5 wird -4 und aus 4.5 wird 4 -->
        <EVAL exec="STS = LSTSO.subtract(LSTOSO).multiply(BigDecimal.valueOf(f)).divide(ZAHL100, 0, BigDecimal.ROUND_DOWN).multiply(ZAHL100)"/>
        
        <EXECUTE method="STSMIN"/> 
        
      </ELSE>
    </IF>
  </METHOD>

  <!-- PAP Seite 34 -->
  <METHOD name="STSMIN">
  

	<IF expr = "STS.compareTo(BigDecimal.ZERO) == -1"> <!-- STS < 0 -->
	    <THEN>			
			<IF expr = "MBV.compareTo(BigDecimal.ZERO) == 0" > <!--  MBV = 0  -->
				<THEN>
				    <!-- absichtlich leer -->
				</THEN>
				 		
				<ELSE>					
					<EVAL exec = "LSTLZZ = LSTLZZ.add(STS)"/>			
					
					<IF expr = "LSTLZZ.compareTo(BigDecimal.ZERO) == -1"> <!--  LSTLZZ < 0 -->					
 						<THEN>
							<EVAL exec = "LSTLZZ = BigDecimal.ZERO" />
						</THEN>
					</IF>
					
					<EVAL exec = "SOLZLZZ = SOLZLZZ.add(STS.multiply(BigDecimal.valueOf(5.5).divide(ZAHL100))).setScale(0, BigDecimal.ROUND_DOWN)"/>
				    
					<IF expr = "SOLZLZZ.compareTo(BigDecimal.ZERO) == -1"> <!--  SOLZLZZ < 0 -->
						<THEN>
							<EVAL exec = "SOLZLZZ = BigDecimal.ZERO" />
						</THEN>
				    </IF>

					<EVAL exec = "BK = BK.add(STS)" />
					
					<IF expr = "BK.compareTo(BigDecimal.ZERO) == -1"> <!--  BK < 0 -->
						<THEN>
							<EVAL exec = "BK = BigDecimal.ZERO" />
				    	</THEN>
				    </IF>
				</ELSE>		
			</IF>		

			<EVAL exec = "STS = BigDecimal.ZERO" /> 
			<EVAL exec = "SOLZS = BigDecimal.ZERO" />

		</THEN>
				
		<ELSE>
		
			<EXECUTE method = "MSOLZSTS" />				

		</ELSE>
	</IF>
			
	<IF expr = "R > 0">
		<THEN>
			<EVAL exec = "BKS = STS" /> 
		</THEN>
		<ELSE>
			<EVAL exec = "BKS = BigDecimal.ZERO" />
		</ELSE>			
    </IF>
    
  </METHOD>	


  
  <!-- Berechnung des SolZ auf sonstige Bezüge, PAP Seite 35 -->
  <METHOD name="MSOLZSTS">
    <IF expr="ZKF.compareTo(BigDecimal.ZERO) == 1"> <!-- ZKF > 0 -->
      <THEN>
        <EVAL exec="SOLZSZVE= ZVE.subtract(KFB)"/>
      </THEN>
      <ELSE>
      	<EVAL exec="SOLZSZVE= ZVE"/>
      </ELSE>
    </IF>
    <IF expr="SOLZSZVE.compareTo(BigDecimal.ONE) == -1"> <!-- SOLZSZVE < 1 -->
      <THEN>
        <EVAL exec="SOLZSZVE= BigDecimal.ZERO"/>
        <EVAL exec="X= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
      	<EVAL exec="X= SOLZSZVE.divide(BigDecimal.valueOf(KZTAB), 0, BigDecimal.ROUND_DOWN)"/>
      </ELSE>
    </IF>
    <IF expr="STKL &lt; 5"> <!-- STKL < 5 -->
      <THEN>
        <EXECUTE method="UPTAB24"/>
      </THEN>
      <ELSE>
      	<EXECUTE method="MST5_6"/> 
      </ELSE>
    </IF>
    <EVAL exec="SOLZSBMG= ST.multiply(BigDecimal.valueOf(f)).setScale(0,BigDecimal.ROUND_DOWN)"/>
    <IF expr="SOLZSBMG.compareTo(SOLZFREI) == 1"> <!-- SOLZSBMG > SOLZFREI -->
      <THEN>
        <EVAL exec="SOLZS= STS.multiply(BigDecimal.valueOf(5.5)).divide(ZAHL100, 0, BigDecimal.ROUND_DOWN)"/>
      </THEN>
      <ELSE>
      	<EVAL exec="SOLZS= BigDecimal.ZERO"/>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Sonderberechnung ohne sonstige Bezüge für Berechnung bei sonstigen Bezügen oder Vergütung für mehrjährige Tätigkeit, PAP Seite 36 -->
  <METHOD name="MOSONST">
    <EVAL exec="ZRE4J= (JRE4.divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)"/>
    <EVAL exec="ZVBEZJ= (JVBEZ.divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)"/>
    <EVAL exec="JLFREIB= JFREIB.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
    <EVAL exec="JLHINZU= JHINZU.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)"/>
    <EXECUTE method="MRE4"/>
    <EXECUTE method="MRE4ABZ"/>
    <EVAL exec="ZRE4VP = ZRE4VP.subtract(JRE4ENT.divide(ZAHL100))"/>
    <EXECUTE method="MZTABFB"/> 
    <EVAL exec="VFRBS1 = ((ANP.add(FVB.add(FVBZ))).multiply(ZAHL100)).setScale(2,BigDecimal.ROUND_DOWN)"/>
    <EXECUTE method="MLSTJAHR"/>
    
     <EVAL exec="WVFRBO = ((ZVE.subtract(GFB)).multiply(ZAHL100)).setScale(2, BigDecimal.ROUND_DOWN)"/>
     <IF expr="WVFRBO.compareTo(BigDecimal.ZERO) == -1 ">
	     <THEN>
	            <EVAL exec="WVFRBO = BigDecimal.ZERO"/>
	     </THEN>
     </IF>
    
    <EVAL exec="LSTOSO= ST.multiply (ZAHL100)"/>
  </METHOD>

  <!-- Sonderberechnung mit sonstige Bezüge für Berechnung bei sonstigen Bezügen oder Vergütung für mehrjährige Tätigkeit, PAP Seite 37 -->
  <METHOD name="MRE4SONST">
    <EXECUTE method="MRE4"/>
    <EVAL exec="FVB= FVBSO"/>
    <EXECUTE method="MRE4ABZ"/>
    <!-- Änderung für 2022  -->
    <EVAL exec="ZRE4VP = ZRE4VP.add(MBV.divide(ZAHL100)).subtract(JRE4ENT.divide(ZAHL100)).subtract(SONSTENT.divide(ZAHL100))"/>
    <EVAL exec="FVBZ= FVBZSO"/>
    <EXECUTE method="MZTABFB"/> 
    <EVAL exec="VFRBS2 = ((((ANP.add(FVB).add(FVBZ))).multiply(ZAHL100))).subtract(VFRBS1)"/>
  </METHOD>
  

  <!-- Tarifliche Einkommensteuer §32a EStG, PAP Seite 38 -->
<METHOD name="UPTAB24"> 
    <IF expr="X.compareTo(GFB.add(ZAHL1)) == -1"> 
      <THEN>
        <EVAL exec="ST= BigDecimal.ZERO"/>
      </THEN>
      <ELSE>
        <IF expr="X.compareTo (BigDecimal.valueOf (17006)) == -1">
          <THEN>
            <EVAL exec="Y = (X.subtract(GFB)).divide(ZAHL10000, 6,BigDecimal.ROUND_DOWN)"/> 
            <EVAL exec="RW= Y.multiply (BigDecimal.valueOf (954.8))"/> 
            <EVAL exec="RW= RW.add (BigDecimal.valueOf (1400))"/>
            <EVAL exec="ST= (RW.multiply (Y)).setScale (0, BigDecimal.ROUND_DOWN)"/>
          </THEN>
          <ELSE>
            <IF expr="X.compareTo (BigDecimal.valueOf (66761)) == -1">
              <THEN>
                <EVAL exec="Y= (X.subtract (BigDecimal.valueOf (17005))).divide (ZAHL10000, 6, BigDecimal.ROUND_DOWN)"/> 
                <EVAL exec="RW= Y.multiply (BigDecimal.valueOf (181.19))"/>
                <EVAL exec="RW= RW.add (BigDecimal.valueOf (2397))"/>
                <EVAL exec="RW= RW.multiply (Y)"/>
                <EVAL exec="ST= (RW.add (BigDecimal.valueOf (991.21))).setScale (0, BigDecimal.ROUND_DOWN)"/> 
              </THEN>
              <ELSE>
	            <IF expr="X.compareTo (BigDecimal.valueOf (277826)) == -1">
	              <THEN>
                    <EVAL exec="ST= ((X.multiply (BigDecimal.valueOf (0.42))).subtract (BigDecimal.valueOf (10636.31))).setScale (0, BigDecimal.ROUND_DOWN)"/> 
                  </THEN>
                  <ELSE>
                    <EVAL exec="ST= ((X.multiply (BigDecimal.valueOf (0.45))).subtract (BigDecimal.valueOf (18971.06))).setScale (0, BigDecimal.ROUND_DOWN)"/> 
                  </ELSE>
                </IF>
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
    <EVAL exec="ST= ST.multiply (BigDecimal.valueOf (KZTAB))"/>
  </METHOD>
</METHODS>
</PAP>