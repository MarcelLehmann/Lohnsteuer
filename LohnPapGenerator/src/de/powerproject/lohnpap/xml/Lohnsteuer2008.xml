<PAP name="Lohnsteuer2008Big" version="1.0">
    <VARIABLES>

		<!-- Stand: 2015-11-16 -->
		<!-- ZIVIT Düsseldorf-->

    <!--  EINGABEPARAMETER  -->
  <INPUTS>
        <!-- Auf die Vollendung des 64. Lebensjahres folgende
             Kalenderjahr (erforderlich, wenn ALTER1=1) -->
        <INPUT name="AJAHR" type="int" />

        <!-- 1, wenn das 64. Lebensjahr zu Beginn des Kalenderjahres vollendet wurde, in dem
             der Lohnzahlungszeitraum endet (Â§ 24 a EStG), sonst = 0 -->
        <INPUT name="ALTER1" type="int" />

        <!-- Jahresfreibetrag nach Ma&szlig;gabe der Eintragungen auf der
             Lohnsteuerkarte in Cents (ggf. 0) -->
        <INPUT name="JFREIB" type="BigDecimal" />

        <!-- Jahreshinzurechnungsbetrag in Cents (ggf. 0) -->
        <INPUT name="JHINZU" type="BigDecimal" />

        <!-- Voraussichtlicher Jahresarbeitslohn ohne sonstige Bezuege und
             ohne Verguetung fuer mehrjaehrige Taetigkeit in Cents (ggf. 0)
             Anmerkung: Die Eingabe dieses Feldes ist erforderlich bei Eingabe
             â€žsonstiger Bezuegeâ€œ (Feld SONSTB) oder bei Eingabe der â€žVerguetung
             fuer mehrjaehrige Taetigkeitâ€œ (Feld VMT). -->
        <INPUT name="JRE4" type="BigDecimal" />

        <!-- In JRE4 enthaltene Versorgungsbezuege in Cents (ggf. 0) -->
        <INPUT name="JVBEZ" type="BigDecimal" />

				<!-- 2 = fÃ¼r den Arbeitnehmer wird die gekÃ¼rzte Vorsorgepauschale nach dem Recht 2008 angesetzt
						 (Â§ 10c Abs. 3 EStG n.F.), jedoch bei der GÃ¼nstigerprÃ¼fung die ungekÃ¼rzte Vorsorgepauschale
						 nach dem Recht bis 2004 berÃ¼cksichtigt (Â§ 10c Abs. 2 EStG a.F.); Ã„nderung durch das JStG 2008.
						 1 = fÃ¼r den Arbeitnehmer wird die gekÃ¼rzte Vorsorgepauschale angewandt (Â§ 10c Abs. 3 EStG),
						 soweit nicht Arbeitnehmer der Fallgruppe 2.
						 0 = andere Arbeitnehmer.
						 FÃ¼r die Zuordnung sind allein die dem Arbeitgeber ohnehin bekannten Tatsachen maÃŸgebend;
						 zusÃ¤tzliche Ermittlungen braucht der Arbeitgeber nicht anzustellen. -->
        <INPUT name="KRV" type="int" />

        <!-- Lohnzahlungszeitraum:
             1 = Jahr
             2 = Monat
             3 = Woche
             4 = Tag -->
        <INPUT name="LZZ" type="int" />

        <!-- In der Lohnsteuerkarte des Arbeitnehmers eingetragener Freibetrag fÃ¼r
             den Lohnzahlungszeitraum in Cent -->
        <INPUT name="LZZFREIB" type="BigDecimal" />

        <!-- In der Lohnsteuerkarte des Arbeitnehmers eingetragener Hinzurechnungsbetrag
             fÃ¼r den Lohnzahlungszeitraum in Cent -->
        <INPUT name="LZZHINZU" type="BigDecimal" />

        <!-- Religionsgemeinschaft des Arbeitnehmers lt. Lohnsteuerkarte (bei
             keiner Religionszugehoerigkeit = 0) -->
        <INPUT name="R" type="int" />

        <!-- Steuerpflichtiger Arbeitslohn vor Beruecksichtigung der Freibetraege
             fuer Versorgungsbezuege, des Altersentlastungsbetrags und des auf
             der Lohnsteuerkarte fuer den Lohnzahlungszeitraum eingetragenen
             Freibetrags in Cents. -->
        <INPUT name="RE4" type="BigDecimal" />

        <!-- Sonstige Bezuege (ohne Verguetung aus mehrjaehriger Taetigkeit) einschliesslich
             Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
             soweit es sich nicht um Bezuege fuer mehrere Jahre handelt in Cents (ggf. 0) -->
        <INPUT name="SONSTB" type="BigDecimal" />

        <!-- Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
             soweit es sich nicht um Bezuege fuer mehrere Jahre handelt
             (in SONSTB enthalten) in Cents -->
        <INPUT name="STERBE" type="BigDecimal" regex_test="" regex_transform="" />

        <!-- Steuerklasse:
             1 = I
             2 = II
             3 = III
             4 = IV
             5 = V
             6 = VI -->
        <INPUT name="STKL" type="int" />

        <!-- In RE4 enthaltene Versorgungsbezuege in Cents (ggf. 0) -->
        <INPUT name="VBEZ" type="BigDecimal" />

        <!-- Vorsorgungsbezug im Januar 2005 bzw. fuer den ersten vollen Monat
             in Cents-->
        <INPUT name="VBEZM" type="BigDecimal" />

        <!-- Voraussichtliche Sonderzahlungen im Kalenderjahr des Versorgungsbeginns
             bei Versorgungsempfaengern ohne Sterbegeld, Kapitalauszahlungen/Abfindungen
             bei Versorgungsbezuegen in Cents-->
        <INPUT name="VBEZS" type="BigDecimal" />

        <!-- In SONSTB enthaltene Versorgungsbezuege einschliesslich Sterbegeld
            in Cents (ggf. 0) -->
        <INPUT name="VBS" type="BigDecimal" />

        <!-- Jahr, in dem der Versorgungsbezug erstmalig gewaehrt wurde; werden
             mehrere Versorgungsbezuege gezahlt, so gilt der aelteste erstmalige Bezug -->
        <INPUT name="VJAHR" type="int" regex_test="" regex_transform="" />

        <!-- Kapitalauszahlungen/Abfindungen bei Versorgungsbezuegen fuer mehrere Jahre in Cents (ggf. 0) -->
        <INPUT name="VKAPA" type="BigDecimal" regex_test="" regex_transform="" />

        <!-- Verguetung fuer mehrjaehrige Taetigkeit ohne Kapitalauszahlungen/Abfindungen bei
             Versorgungsbezuegen in Cents (ggf. 0) -->
        <INPUT name="VMT" type="BigDecimal" regex_test="" regex_transform="" />

        <!-- Zahl der Freibetraege fuer Kinder (eine Dezimalstelle, nur bei Steuerklassen
             I, II, III und IV) -->
        <INPUT name="ZKF" type="BigDecimal" regex_test="" regex_transform="" />

        <!-- Zahl der Monate, fuer die Versorgungsbezuege gezahlt werden (nur
             erforderlich bei Jahresberechnung (LZZ = 1) -->
        <INPUT name="ZMVB" type="int" regex_test="" regex_transform="" />

   	</INPUTS>

    	<!--  AUSGABEPARAMETER  -->
		<OUTPUTS type="STANDARD">

        <!-- Bemessungsgrundlage fuer die Kirchenlohnsteuer in Cents -->
        <OUTPUT name="BK" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Bemessungsgrundlage der sonstigen Einkuenfte (ohne Verguetung
             fuer mehrjaehrige Taetigkeit) fuer die Kirchenlohnsteuer in Cents -->
        <OUTPUT name="BKS" type="BigDecimal" default="new BigDecimal(0)" />

        <OUTPUT name="BKV" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Fuer den Lohnzahlungszeitraum einzubehaltende Lohnsteuer in Cents -->
        <OUTPUT name="LSTLZZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Fuer den Lohnzahlungszeitraum einzubehaltender Solidaritaetszuschlag
             in Cents -->
        <OUTPUT name="SOLZLZZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Solidaritaetszuschlag fuer sonstige Bezuege (ohne Verguetung fuer mehrjaehrige
             Taetigkeit) in Cents -->
        <OUTPUT name="SOLZS" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Solidaritaetszuschlag fuer die Verguetung fuer mehrjaehrige Taetigkeit in
             Cents -->
        <OUTPUT name="SOLZV" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Lohnsteuer fuer sonstige Einkuenfte (ohne Verguetung fuer mehrjaehrige
             Taetigkeit) in Cents -->
        <OUTPUT name="STS" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Lohnsteuer fuer Verguetung fuer mehrjaehrige Taetigkeit in Cents -->
        <OUTPUT name="STV" type="BigDecimal" default="new BigDecimal(0)" />


   	</OUTPUTS>

	    <!--  INTERNE FELDER  -->
		<INTERNALS>

        <!-- Altersentlastungsbetrag nach AlterseinkÃ¼nftegesetz in â‚¬,
             Cent (2 Dezimalstellen) -->
        <INTERNAL name="ALTE" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Arbeitnehmer-Pauschbetrag in EURO -->
        <INTERNAL name="ANP" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf den Lohnzahlungszeitraum entfallender Anteil von Jahreswerten
             auf ganze Cents abgerundet -->
        <INTERNAL name="ANTEIL1" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf den Lohnzahlungszeitraum entfallender Anteil von Jahreswerten
             auf ganze Cents aufgerundet -->
        <INTERNAL name="ANTEIL2" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Bemessungsgrundlage fÃ¼r Altersentlastungsbetrag in â‚¬, Cent
             (2 Dezimalstellen) -->
        <INTERNAL name="BMG" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Differenz zwischen ST1 und ST2 in EURO -->
        <INTERNAL name="DIFF" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Entlastungsbetrag fuer Alleinerziehende in EURO -->
        <INTERNAL name="EFA" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Versorgungsfreibetrag in â‚¬, Cent (2 Dezimalstellen) -->
        <INTERNAL name="FVB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Versorgungsfreibetrag in â‚¬, Cent (2 Dezimalstellen) fÃ¼r die Berechnung
             der Lohnsteuer fÃ¼r den sonstigen Bezug -->
	      <INTERNAL name="FVBSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zuschlag zum Versorgungsfreibetrag in EURO -->
        <INTERNAL name="FVBZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zuschlag zum Versorgungsfreibetrag in EURO fuer die Berechnung
             der Lohnsteuer beim sonstigen Bezug -->
	      <INTERNAL name="FVBZSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Sicherungsfeld fÃ¼r den Zuschlag zum Versorgungsfreibetrag in â‚¬ fÃ¼r
             die Berechnung der Lohnsteuer fÃ¼r die VergÃ¼tung fÃ¼r mehrjÃ¤hrige
             TÃ¤tigkeit -->
	      <INTERNAL name="FVBZOSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Maximaler Altersentlastungsbetrag in â‚¬ -->
        <INTERNAL name="HBALTE" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- MaÃŸgeblicher maximaler Versorgungsfreibetrag in â‚¬ -->
        <INTERNAL name="HFVB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- MaÃŸgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in â‚¬,Cent
             (2 Dezimalstellen) -->
        <INTERNAL name="HFVBZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- MaÃŸgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in â‚¬, Cent
             (2 Dezimalstellen) fÃ¼r die Berechnung der Lohnsteuer fÃ¼r den
             sonstigen Bezug -->
        <INTERNAL name="HFVBZSO" type="BigDecimal" default="new BigDecimal(0)" />

         <!-- Nummer der Tabellenwerte fuer Versorgungsparameter -->
        <INTERNAL name="J" type="int" default="0" />

        <!-- Jahressteuer nach Â§ 51a EStG, aus der Solidaritaetszuschlag und
             Bemessungsgrundlage fuer die Kirchenlohnsteuer ermittelt werden in EURO -->
        <INTERNAL name="JBMG" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechneter LZZFREIB in â‚¬, Cent
             (2 Dezimalstellen) -->
        <INTERNAL name="JLFREIB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnete LZZHINZU in â‚¬, Cent
             (2 Dezimalstellen) -->
        <INTERNAL name="JLHINZU" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Jahreswert, dessen Anteil fuer einen Lohnzahlungszeitraum in
             UPANTEIL errechnet werden soll in Cents -->
        <INTERNAL name="JW" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Nummer der Tabellenwerte fuer Parameter bei Altersentlastungsbetrag -->
        <INTERNAL name="K" type="int" default="0" />

        <!-- Merker fÃ¼r Berechnung Lohnsteuer fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit.
             0 = normale Steuerberechnung
             1 = Steuerberechnung fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit
             2 = Steuerberechnung fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit Sonderfall nach Â§ 34 Abs. 1 Satz 3 EStG -->
        <INTERNAL name="KENNVMT" type="int" default="0" />

        <!-- Summe der Freibetraege fuer Kinder in EURO -->
        <INTERNAL name="KFB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Kennzahl fuer die Einkommensteuer-Tabellenart:
             1 = Grundtabelle
             2 = Splittingtabelle -->
        <INTERNAL name="KZTAB" type="int" default="0" />

        <!-- Jahreslohnsteuer in EURO -->
        <INTERNAL name="LSTJAHR" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zwischenfelder der Jahreslohnsteuer in Cent -->
        <INTERNAL name="LST1"   type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="LST2"   type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="LST3"   type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="LSTOSO" type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="LSTSO"  type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Mindeststeuer fuer die Steuerklassen V und VI in EURO -->
        <INTERNAL name="MIST" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Rechenwert in Gleitkommadarstellung -->
        <INTERNAL name="RW" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Sonderausgaben-Pauschbetrag in EURO -->
        <INTERNAL name="SAP" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Freigrenze fuer den Solidaritaetszuschlag in EURO -->
        <INTERNAL name="SOLZFREI" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Solidaritaetszuschlag auf die Jahreslohnsteuer in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="SOLZJ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zwischenwert fuer den Solidaritaetszuschlag auf die Jahreslohnsteuer
             in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="SOLZMIN" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Tarifliche Einkommensteuer in EURO -->
        <INTERNAL name="ST" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Tarifliche Einkommensteuer auf das 1,25-fache ZX in EURO -->
        <INTERNAL name="ST1" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Tarifliche Einkommensteuer auf das 0,75-fache ZX in EURO -->
        <INTERNAL name="ST2" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Bemessungsgrundlage fuer den Versorgungsfreibetrag in Cents -->
        <INTERNAL name="VBEZB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Bemessungsgrundlage fÃ¼r den Versorgungsfreibetrag in Cent fÃ¼r
             den sonstigen Bezug -->
        <INTERNAL name="VBEZBSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Hoechstbetrag der Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C -->
        <INTERNAL name="VHB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Vorsorgepauschale in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSP" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C -->
        <INTERNAL name="VSPN" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zwischenwert 1 bei der Berechnung der Vorsorgepauschale nach
             dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSP1" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zwischenwert 2 bei der Berechnung der Vorsorgepauschale nach
             dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSP2" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Hoechstbetrag der Vorsorgepauschale nach Â§ 10c Abs. 3 EStG in EURO -->
        <INTERNAL name="VSPKURZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Hoechstbetrag der Vorsorgepauschale nach Â§ 10c Abs. 2 Nr. 2 EStG in EURO -->
        <INTERNAL name="VSPMAX1" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Hoechstbetrag der Vorsorgepauschale nach Â§ 10c Abs. 2 Nr. 3 EStG in EURO -->
        <INTERNAL name="VSPMAX2" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Vorsorgepauschale nach Â§ 10c Abs. 2 Satz 2 EStG vor der Hoechstbetragsberechnung
             in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSPO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Fuer den Abzug nach Â§ 10c Abs. 2 Nrn. 2 und 3 EStG verbleibender
             Rest von VSPO in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSPREST" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Hoechstbetrag der Vorsorgepauschale nach Â§ 10c Abs. 2 Nr. 1 EStG
             in EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="VSPVOR" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zu versteuerndes Einkommen gem. Â§ 32a Abs. 1 und 2 EStG â‚¬, C
             (2 Dezimalstellen) -->
        <INTERNAL name="X" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- gem. Â§ 32a Abs. 1 EStG (6 Dezimalstellen) -->
        <INTERNAL name="Y" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in â‚¬, C (2 Dezimalstellen)
             nach Abzug der FreibetrÃ¤ge nach Â§ 39 b Abs. 2 Satz 3 und 4. -->
        <INTERNAL name="ZRE4" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in â‚¬, C (2 Dezimalstellen) -->
        <INTERNAL name="ZRE4J" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Sicherungsfeld von ZRE4 bei der Berechnung der Lohnsteuer fÃ¼r
             die VergÃ¼tung fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit in â‚¬, C (2 Dezimalstellen) -->
        <INTERNAL name="ZRE4OSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- 1/5 des mehrjÃ¤hriger Bezugs abzÃ¼glich der auf diesen Lohnbestandteil
             entfallenden festen TabellenfreibetrÃ¤ge in â‚¬, C (2 Dezimalstellen) -->
        <INTERNAL name="ZRE4VMT" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnetes RE4 in â‚¬, C (2 Dezimalstellen)
             nach Abzug des Versorgungsfreibetrags und des Alterentlastungsbetrags
             zur Berechnung der Vorsorgepauschale in â‚¬, Cent (2 Dezimalstellen) -->
        <INTERNAL name="ZRE4VP" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Feste TabellenfreibetrÃ¤ge (ohne Vorsorgepauschale) in â‚¬, Cent
             (2 Dezimalstellen) -->
        <INTERNAL name="ZTABFB" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Sicherungsfeld von ZTABFB bei der Berechnung fÃ¼r die VergÃ¼tung
             fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit in â‚¬, Cent (2 Dezimalstellen) -->
        <INTERNAL name="ZTABFBOSO" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnetes (VBEZ abzueglich FVB) in
             EURO, C (2 Dezimalstellen) -->
        <INTERNAL name="ZVBEZ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Auf einen Jahreslohn hochgerechnetes VBEZ in â‚¬, C (2 Dezimalstellen) -->
        <INTERNAL name="ZVBEZJ" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zu versteuerndes Einkommen in â‚¬, C (2 Dezimalstellen) -->
        <INTERNAL name="ZVE" type="BigDecimal" default="new BigDecimal(0)" />

        <!-- Zwischenfelder zu X fuer die Berechnung der Steuer nach Â§ 39b
             Abs. 2 Satz 8 EStG in EURO. -->
        <INTERNAL name="ZX"    type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="ZZX"   type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="HOCH"  type="BigDecimal" default="new BigDecimal(0)" />
        <INTERNAL name="VERGL" type="BigDecimal" default="new BigDecimal(0)" />
		</INTERNALS>
    </VARIABLES>

    <CONSTANTS>
        <!-- Tabelle fuer die Vomhundertsaetze des Versorgungsfreibetrags -->
        <CONSTANT name="TAB1" type="BigDecimal[]" value="{BigDecimal.valueOf (0.0), BigDecimal.valueOf (0.4), BigDecimal.valueOf (0.384), BigDecimal.valueOf (0.368), BigDecimal.valueOf (0.352), BigDecimal.valueOf (0.336), BigDecimal.valueOf (0.32), BigDecimal.valueOf (0.304), BigDecimal.valueOf (0.288), BigDecimal.valueOf (0.272), BigDecimal.valueOf (0.256), BigDecimal.valueOf (0.24), BigDecimal.valueOf (0.224), BigDecimal.valueOf (0.208), BigDecimal.valueOf (0.192), BigDecimal.valueOf (0.176), BigDecimal.valueOf (0.16), BigDecimal.valueOf (0.152), BigDecimal.valueOf (0.144), BigDecimal.valueOf (0.136), BigDecimal.valueOf (0.128), BigDecimal.valueOf (0.12), BigDecimal.valueOf (0.112), BigDecimal.valueOf (0.104), BigDecimal.valueOf (0.096), BigDecimal.valueOf (0.088), BigDecimal.valueOf (0.08), BigDecimal.valueOf (0.072), BigDecimal.valueOf (0.064), BigDecimal.valueOf (0.056), BigDecimal.valueOf (0.048), BigDecimal.valueOf (0.04), BigDecimal.valueOf (0.032), BigDecimal.valueOf (0.024), BigDecimal.valueOf (0.016), BigDecimal.valueOf (0.008), BigDecimal.valueOf (0.0)}" />

        <!-- Tabelle fuer die Hoechstbetrage des Versorgungsfreibetrags -->
        <CONSTANT name="TAB2" type="BigDecimal[]" value="{BigDecimal.valueOf (0), BigDecimal.valueOf (3000), BigDecimal.valueOf (2880), BigDecimal.valueOf (2760), BigDecimal.valueOf (2640), BigDecimal.valueOf (2520), BigDecimal.valueOf (2400), BigDecimal.valueOf (2280), BigDecimal.valueOf (2160), BigDecimal.valueOf (2040), BigDecimal.valueOf (1920), BigDecimal.valueOf (1800), BigDecimal.valueOf (1680), BigDecimal.valueOf (1560), BigDecimal.valueOf (1440), BigDecimal.valueOf (1320), BigDecimal.valueOf (1200), BigDecimal.valueOf (1140), BigDecimal.valueOf (1080), BigDecimal.valueOf (1020), BigDecimal.valueOf (960), BigDecimal.valueOf (900), BigDecimal.valueOf (840), BigDecimal.valueOf (780), BigDecimal.valueOf (720), BigDecimal.valueOf (660), BigDecimal.valueOf (600), BigDecimal.valueOf (540), BigDecimal.valueOf (480), BigDecimal.valueOf (420), BigDecimal.valueOf (360), BigDecimal.valueOf (300), BigDecimal.valueOf (240), BigDecimal.valueOf (180), BigDecimal.valueOf (120), BigDecimal.valueOf (60), BigDecimal.valueOf (0)}" />

        <!-- Tabelle fuer die Zuschlaege zum Versorgungsfreibetrag -->
        <CONSTANT name="TAB3" type="BigDecimal[]" value="{BigDecimal.valueOf (0), BigDecimal.valueOf (900), BigDecimal.valueOf (864), BigDecimal.valueOf (828), BigDecimal.valueOf (792), BigDecimal.valueOf (756), BigDecimal.valueOf (720), BigDecimal.valueOf (684), BigDecimal.valueOf (648), BigDecimal.valueOf (612), BigDecimal.valueOf (576), BigDecimal.valueOf (540), BigDecimal.valueOf (504), BigDecimal.valueOf (468), BigDecimal.valueOf (432), BigDecimal.valueOf (396), BigDecimal.valueOf (360), BigDecimal.valueOf (342), BigDecimal.valueOf (324), BigDecimal.valueOf (306), BigDecimal.valueOf (288), BigDecimal.valueOf (270), BigDecimal.valueOf (252), BigDecimal.valueOf (234), BigDecimal.valueOf (216), BigDecimal.valueOf (198), BigDecimal.valueOf (180), BigDecimal.valueOf (162), BigDecimal.valueOf (144), BigDecimal.valueOf (126), BigDecimal.valueOf (108), BigDecimal.valueOf (90), BigDecimal.valueOf (72), BigDecimal.valueOf (54), BigDecimal.valueOf (36), BigDecimal.valueOf (18), BigDecimal.valueOf (0)}" />

        <!-- Tabelle fuer die Vomhundertsaetze des Altersentlastungsbetrags -->
        <CONSTANT name="TAB4" type="BigDecimal[]" value="{BigDecimal.valueOf (0.0), BigDecimal.valueOf (0.4), BigDecimal.valueOf (0.384), BigDecimal.valueOf (0.368), BigDecimal.valueOf (0.352), BigDecimal.valueOf (0.336), BigDecimal.valueOf (0.32), BigDecimal.valueOf (0.304), BigDecimal.valueOf (0.288), BigDecimal.valueOf (0.272), BigDecimal.valueOf (0.256), BigDecimal.valueOf (0.24), BigDecimal.valueOf (0.224), BigDecimal.valueOf (0.208), BigDecimal.valueOf (0.192), BigDecimal.valueOf (0.176), BigDecimal.valueOf (0.16), BigDecimal.valueOf (0.152), BigDecimal.valueOf (0.144), BigDecimal.valueOf (0.136), BigDecimal.valueOf (0.128), BigDecimal.valueOf (0.12), BigDecimal.valueOf (0.112), BigDecimal.valueOf (0.104), BigDecimal.valueOf (0.096), BigDecimal.valueOf (0.088), BigDecimal.valueOf (0.08), BigDecimal.valueOf (0.072), BigDecimal.valueOf (0.064), BigDecimal.valueOf (0.056), BigDecimal.valueOf (0.048), BigDecimal.valueOf (0.04), BigDecimal.valueOf (0.032), BigDecimal.valueOf (0.024), BigDecimal.valueOf (0.016), BigDecimal.valueOf (0.008), BigDecimal.valueOf (0.0)}" />

        <!-- Tabelle fuer die Hoechstbetraege des Altersentlastungsbetrags -->
        <CONSTANT name="TAB5" type="BigDecimal[]" value="{BigDecimal.valueOf (0), BigDecimal.valueOf (1900), BigDecimal.valueOf (1824), BigDecimal.valueOf (1748), BigDecimal.valueOf (1672), BigDecimal.valueOf (1596), BigDecimal.valueOf (1520), BigDecimal.valueOf (1444), BigDecimal.valueOf (1368), BigDecimal.valueOf (1292), BigDecimal.valueOf (1216), BigDecimal.valueOf (1140), BigDecimal.valueOf (1064), BigDecimal.valueOf (988), BigDecimal.valueOf (912), BigDecimal.valueOf (836), BigDecimal.valueOf (760), BigDecimal.valueOf (722), BigDecimal.valueOf (684), BigDecimal.valueOf (646), BigDecimal.valueOf (608), BigDecimal.valueOf (570), BigDecimal.valueOf (532), BigDecimal.valueOf (494), BigDecimal.valueOf (456), BigDecimal.valueOf (418), BigDecimal.valueOf (380), BigDecimal.valueOf (342), BigDecimal.valueOf (304), BigDecimal.valueOf (266), BigDecimal.valueOf (228), BigDecimal.valueOf (190), BigDecimal.valueOf (152), BigDecimal.valueOf (114), BigDecimal.valueOf (76), BigDecimal.valueOf (38), BigDecimal.valueOf (0)}" />

        <!-- Zahlenkonstanten fuer im Plan oft genutzte BigDecimal Werte -->
        <CONSTANT name="ZAHL1" type="BigDecimal" value="BigDecimal.ONE" />
        <CONSTANT name="ZAHL2" type="BigDecimal" value="new BigDecimal(2)" />
        <CONSTANT name="ZAHL3" type="BigDecimal" value="new BigDecimal(3)" />
        <CONSTANT name="ZAHL4" type="BigDecimal" value="new BigDecimal(4)" />
        <CONSTANT name="ZAHL5" type="BigDecimal" value="new BigDecimal(5)" />
        <CONSTANT name="ZAHL6" type="BigDecimal" value="new BigDecimal(6)" />
        <CONSTANT name="ZAHL7" type="BigDecimal" value="new BigDecimal(7)" />
        <CONSTANT name="ZAHL8" type="BigDecimal" value="new BigDecimal(8)" />
        <CONSTANT name="ZAHL9" type="BigDecimal" value="new BigDecimal(9)" />
        <CONSTANT name="ZAHL10" type="BigDecimal" value="BigDecimal.TEN" />
        <CONSTANT name="ZAHL11" type="BigDecimal" value="new BigDecimal(11)" />
        <CONSTANT name="ZAHL12" type="BigDecimal" value="new BigDecimal(12)" />
        <CONSTANT name="ZAHL100" type="BigDecimal" value="new BigDecimal(100)" />
        <CONSTANT name="ZAHL360" type="BigDecimal" value="new BigDecimal(360)" />
        <CONSTANT name="ZAHL700" type="BigDecimal" value="new BigDecimal(700)" />

    </CONSTANTS>

    <METHODS>

  <!-- PROGRAMMABLAUFPLAN 2008, PAP Seite 10 -->

  <MAIN>
    <EXECUTE method="MRE4JL" />
    <EXECUTE method="MRE4" />
    <EXECUTE method="MRE4ABZ" />
    <EXECUTE method="MZTABFB" />
    <EVAL exec="KENNVMT= 0" />
    <EXECUTE method="MLSTJAHR" />
    <EVAL exec="LSTJAHR= ST" />
    <EVAL exec="JW= LSTJAHR.multiply (ZAHL100)" />
    <EXECUTE method="UPANTEIL" />
    <EVAL exec="LSTLZZ= ANTEIL1" />
    <IF expr="ZKF.compareTo (BigDecimal.ZERO) == 1">
      <THEN>
        <EVAL exec="ZTABFB= (ZTABFB.add (KFB)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EXECUTE method="MLSTJAHR" />
        <EVAL exec="JBMG= ST" />
      </THEN>
      <ELSE>
        <EVAL exec="JBMG= LSTJAHR" />
      </ELSE>
    </IF>
    <EXECUTE method="MSOLZ" />
    <EXECUTE method="MSONST" />
    <EXECUTE method="MVMT" />
  </MAIN>

  <!-- Ermittlung des Jahresarbeitslohns und der FreibetrÃ¤ge Â§ 39 b Abs. 2 Satz 2 EStG, PAP Seite 11 -->

  <METHOD name="MRE4JL">
    <IF expr="LZZ == 1">
      <THEN>
        <EVAL exec="ZRE4J= RE4.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="ZVBEZJ= VBEZ.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="JLFREIB= LZZFREIB.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="JLHINZU= LZZHINZU.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
      </THEN>
      <ELSE>
        <IF expr="LZZ == 2">
          <THEN>
            <EVAL exec="ZRE4J= (RE4.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL12)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
          </THEN>
          <ELSE>
            <IF expr="LZZ == 3">
              <THEN>
                <EVAL exec="ZRE4J= (RE4.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL360)).divide (ZAHL700, 2, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
                <EVAL exec="ZRE4J= (RE4.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="ZVBEZJ= (VBEZ.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="JLFREIB= (LZZFREIB.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="JLHINZU= (LZZHINZU.multiply (ZAHL360)).divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- FreibetrÃ¤ge fÃ¼r VersorgungsbezÃ¼ge, Altersentlastungsbetrag (Â§ 39b Abs. 2 Satz 3 EStG), PAP Seite 12 -->

  <METHOD name="MRE4">
    <IF expr="ZVBEZJ.compareTo (BigDecimal.ZERO) == 0" >
      <THEN>
        <EVAL exec="FVBZ= BigDecimal.ZERO" />
        <EVAL exec="FVB= BigDecimal.ZERO" />
        <EVAL exec="FVBZSO= BigDecimal.ZERO" />
        <EVAL exec="FVBSO= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <IF expr="VJAHR &lt; 2006">
          <THEN>
            <EVAL exec="J= 1" />
          </THEN>
          <ELSE>
            <IF expr="VJAHR &lt; 2040">
              <THEN>
                <EVAL exec="J= VJAHR - 2004" />
              </THEN>
              <ELSE>
                <EVAL exec="J= 36" />
              </ELSE>
            </IF>
          </ELSE>
        </IF>
        <IF expr="LZZ == 1" >
          <THEN>
            <EVAL exec="VBEZB= (VBEZM.multiply (BigDecimal.valueOf (ZMVB))).add (VBEZS)" />
						<!-- Achtung! Rechengenauigkeit Division? -->
            <EVAL exec="HFVB= TAB2[J].divide (ZAHL12).multiply (BigDecimal.valueOf (ZMVB))" />
            <EVAL exec="FVBZ= TAB3[J].divide (ZAHL12).multiply (BigDecimal.valueOf (ZMVB)).setScale (0, BigDecimal.ROUND_UP)" />
          </THEN>
          <ELSE>
            <EVAL exec="VBEZB= ((VBEZM.multiply (ZAHL12)).add (VBEZS)).setScale (2, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="HFVB= TAB2[J]" />
            <EVAL exec="FVBZ= TAB3[J]" />
          </ELSE>
        </IF>
        <EVAL exec="FVB= ((VBEZB.multiply (TAB1[J]))).divide (ZAHL100).setScale (2, BigDecimal.ROUND_UP)" />
        <IF expr="FVB.compareTo (HFVB) == 1">
          <THEN>
            <EVAL exec="FVB = HFVB" />
          </THEN>
        </IF>
        <EVAL exec="VBEZBSO= STERBE.add (VKAPA)" />
        <EVAL exec="FVBSO= (FVB.add((VBEZBSO.multiply (TAB1[J])).divide (ZAHL100))).setScale (2, BigDecimal.ROUND_UP)" />
        <IF expr="FVBSO.compareTo (TAB2[J]) == 1">
          <THEN>
            <EVAL exec="FVBSO = TAB2[J]" />
          </THEN>
        </IF>
        <EVAL exec="HFVBZSO= (((VBEZB.add(VBEZBSO)).divide (ZAHL100)).subtract (FVBSO)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <IF expr="(TAB3[3]).compareTo (HFVBZSO) == 1">
          <THEN>
            <EVAL exec="FVBZSO = HFVBZSO.setScale(0, BigDecimal.ROUND_UP)" />
          </THEN>
          <ELSE>
            <EVAL exec="FVBZSO= TAB3[J]" />
          </ELSE>
        </IF>
        <EVAL exec="HFVBZ= ((VBEZB.divide (ZAHL100)).subtract (FVB)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <IF expr="FVBZ.compareTo (HFVBZ) == 1">
          <THEN>
            <EVAL exec="FVBZ = HFVBZ.setScale (0, BigDecimal.ROUND_UP)" />
          </THEN>
        </IF>
      </ELSE>
    </IF>
    <EXECUTE method="MRE4ALTE" />
  </METHOD>

  <!-- Altersentlastungsbetrag (Â§ 39b Abs. 2 Satz 3 EStG), PAP Seite 13 -->

  <METHOD name="MRE4ALTE">
    <IF expr="ALTER1 == 0">
      <THEN>
        <EVAL exec="ALTE= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <IF expr="AJAHR &lt; 2006">
          <THEN>
            <EVAL exec="K= 1" />
          </THEN>
          <ELSE>
            <IF expr="AJAHR &lt; 2040">
              <THEN>
                <EVAL exec="K= AJAHR - 2004" />
              </THEN>
              <ELSE>
                <EVAL exec="K= 36" />
              </ELSE>
            </IF>
          </ELSE>
        </IF>
        <EVAL exec="BMG= ZRE4J.subtract (ZVBEZJ)" />
        <EVAL exec="ALTE= (BMG.multiply (TAB4[K])).setScale (2, BigDecimal.ROUND_UP)" />
        <EVAL exec="HBALTE= TAB5[K]" />
        <IF expr="ALTE.compareTo (HBALTE) == 1">
          <THEN>
            <EVAL exec="ALTE= HBALTE" />
          </THEN>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Ermittlung des Jahresarbeitslohns nach Abzug der FreibetrÃ¤ge nach Â§ 39 b Abs. 2 Satz 3 und 4 EStG, PAP Seite 15 -->

  <METHOD name="MRE4ABZ">
    <EVAL exec="ZRE4= (ZRE4J.subtract (FVB).subtract (ALTE).subtract (JLFREIB).add (JLHINZU)).setScale (2, BigDecimal.ROUND_DOWN)" />
    <IF expr="ZRE4.compareTo (BigDecimal.ZERO) == -1" >
      <THEN>
        <EVAL exec="ZRE4= BigDecimal.ZERO" />
      </THEN>
    </IF>
    <EVAL exec="ZRE4VP= (ZRE4J.subtract (FVB).subtract (ALTE)).setScale (2, BigDecimal.ROUND_DOWN)" />
    <IF expr="ZRE4VP.compareTo (BigDecimal.ZERO) == -1" >
      <THEN>
        <EVAL exec="ZRE4VP= BigDecimal.ZERO" />
      </THEN>
    </IF>
    <EVAL exec="ZVBEZ= (ZVBEZJ.subtract (FVB)).setScale (2, BigDecimal.ROUND_DOWN)" />
    <IF expr="ZVBEZ.compareTo (BigDecimal.ZERO) == -1" >
      <THEN>
        <EVAL exec="ZVBEZ= BigDecimal.ZERO" />
      </THEN>
    </IF>
  </METHOD>

  <!-- Ermittlung der festen TabellenfreibetrÃ¤ge (ohne Vorsorgepauschale), PAP Seite 16 -->

  <METHOD name="MZTABFB">
    <EVAL exec="ANP= BigDecimal.ZERO" />
    <IF expr="ZVBEZ.compareTo (BigDecimal.ZERO) >= 0">
      <THEN>
        <IF expr="ZVBEZ.compareTo (FVBZ) == -1">
          <THEN>
            <EVAL exec="FVBZ= ZVBEZ.setScale (0, BigDecimal.ROUND_DOWN)" />
          </THEN>
        </IF>
      </THEN>
    </IF>
    <IF expr="STKL &lt; 6">
      <THEN>
        <IF expr="ZVBEZ.compareTo (BigDecimal.ZERO) == 1">
          <THEN>
            <IF expr="(ZVBEZ.subtract (FVBZ)).compareTo (BigDecimal.valueOf (102)) == -1">
              <THEN>
                <EVAL exec="ANP= (ZVBEZ.subtract (FVBZ)).setScale (0, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
                <EVAL exec="ANP= BigDecimal.valueOf (102)" />
              </ELSE>
            </IF>
          </THEN>
        </IF>
      </THEN>
      <ELSE>
      	<EVAL exec="FVBZ= BigDecimal.valueOf (0)" />
      	<EVAL exec="FVBZSO= BigDecimal.valueOf (0)" />
      </ELSE>
    </IF>
    <IF expr="STKL &lt; 6">
      <THEN>
        <IF expr="ZRE4.compareTo (ZVBEZ) == 1">
          <THEN>
            <IF expr="(ZRE4.subtract (ZVBEZ)).compareTo (BigDecimal.valueOf (920)) == -1">
              <THEN>
                <EVAL exec="ANP= (ANP.add (ZRE4).subtract (ZVBEZ)).setScale (0, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
                <EVAL exec="ANP= ANP.add (BigDecimal.valueOf (920))" />
              </ELSE>
            </IF>
          </THEN>
        </IF>
      </THEN>
    </IF>
    <EVAL exec="KZTAB= 1" />
    <IF expr="STKL == 1">
      <THEN>
        <EVAL exec="SAP= BigDecimal.valueOf (36)" />
        <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (5808))).setScale (0, BigDecimal.ROUND_DOWN)" />
      </THEN>
      <ELSE>
        <IF expr="STKL == 2">
          <THEN>
            <EVAL exec="EFA= BigDecimal.valueOf (1308)" />
            <EVAL exec="SAP= BigDecimal.valueOf (36)" />
            <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (5808))).setScale (0, BigDecimal.ROUND_DOWN)" />
          </THEN>
          <ELSE>
            <IF expr="STKL == 3">
              <THEN>
                <EVAL exec="KZTAB= 2" />
                <EVAL exec="SAP= BigDecimal.valueOf (72)" />
                <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (5808))).setScale (0, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
                <IF expr="STKL == 4">
                  <THEN>
                    <EVAL exec="SAP= BigDecimal.valueOf (36)" />
                    <EVAL exec="KFB= (ZKF.multiply (BigDecimal.valueOf (2904))).setScale (0, BigDecimal.ROUND_DOWN)" />
                  </THEN>
                  <ELSE>
                    <EVAL exec="KFB= BigDecimal.ZERO" />
                  </ELSE>
                </IF>
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
    <EVAL exec="ZTABFB= (EFA.add (ANP).add (SAP).add (FVBZ)).setScale (2, BigDecimal.ROUND_DOWN)" />
  </METHOD>

  <!-- Ermittlung Jahreslohnsteuer, PAP Seite 17 -->

  <METHOD name="MLSTJAHR">
    <IF expr="STKL &lt; 5">
      <THEN>
        <EXECUTE method="UPEVP" />
      </THEN>
      <ELSE>
        <EVAL exec="VSP= BigDecimal.ZERO" />
      </ELSE>
    </IF>
    <IF expr="KENNVMT == 0">
      <THEN>
        <EVAL exec="ZVE= (ZRE4.subtract (ZTABFB).subtract (VSP)).setScale (2, BigDecimal.ROUND_DOWN)" />
      </THEN>
      <ELSE>
        <IF expr="KENNVMT == 1">
          <THEN>
            <EVAL exec="ZVE= ZRE4OSO.subtract (ZTABFBOSO).add (ZRE4VMT).subtract (VSP).setScale (2, BigDecimal.ROUND_DOWN)" />
          </THEN>
          <ELSE>
            <EVAL exec="ZVE= (((ZRE4.subtract (ZTABFB)).divide (ZAHL5)).subtract (VSP)).setScale (2, BigDecimal.ROUND_DOWN)" />
          </ELSE>
        </IF>
      </ELSE>
    </IF>
    <IF expr="ZVE.compareTo (ZAHL1) == -1">
      <THEN>
        <EVAL exec="ZVE= BigDecimal.ZERO" />
        <EVAL exec="X= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <EVAL exec="X= ZVE.divide (BigDecimal.valueOf (KZTAB), 0, BigDecimal.ROUND_DOWN)" />
      </ELSE>
    </IF>
    <IF expr="STKL &lt; 5">
      <THEN>
        <EXECUTE method="UPTAB07" />
      </THEN>
      <ELSE>
        <EXECUTE method="MST5_6" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Vorsorgepauschale (Â§ 39b Abs. 2 Satz 6 Nr 3 EStG) nach AlterseinkÃ¼nftegesetz, PAP Seite 18 -->

  <METHOD name="UPEVP">

  <!-- Achtung: Er wird davon ausgegangen, dass
    a) die Rentenversicherungsbemessungsgrenze sich 2008 auf 63.600 erhÃ¶ht und
    b) der Beitragsatz zur Rentenversicherung gegenÃ¼ber 2007 unverÃ¤ndert bleibt -->

    <IF expr="KRV &gt; 0">
      <THEN>
        <EVAL exec="VSP1= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <IF expr="ZRE4VP.compareTo (BigDecimal.valueOf (63600)) == 1">
          <THEN>
            <EVAL exec="ZRE4VP= BigDecimal.valueOf (63600)" />
          </THEN>
        </IF>
        <EVAL exec="VSP1= (ZRE4VP.multiply (BigDecimal.valueOf (0.32))).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="VSP1= (VSP1.multiply (BigDecimal.valueOf (0.0995))).setScale (2, BigDecimal.ROUND_DOWN)" />
      </ELSE>
    </IF>
    <EVAL exec="VSP2= (ZRE4VP.multiply (BigDecimal.valueOf (0.11))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="VHB= (BigDecimal.valueOf(KZTAB).multiply(BigDecimal.valueOf (1500))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <IF expr="VSP2.compareTo (VHB) == 1">
      <THEN>
        <EVAL exec="VSP2= VHB" />
      </THEN>
    </IF>
    <EVAL exec="VSPN= (VSP1.add (VSP2)).setScale (0, BigDecimal.ROUND_UP)" />
    <EXECUTE method="MVSP" />
    <IF expr="VSPN.compareTo (VSP) == 1">
      <THEN>
        <EVAL exec="VSP= VSPN.setScale (2, BigDecimal.ROUND_DOWN)" />
      </THEN>
    </IF>
  </METHOD>

  <!-- Vorsorgepauschale (Â§39b Abs. 2 Satz 6 Nr 3 EStG) Vergleichsberechnung fuer Guenstigerpruefung, PAP Seite 19 -->

  <METHOD name="MVSP">
    <EVAL exec="VSPO= (ZRE4VP.multiply (BigDecimal.valueOf (0.2))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="VSPVOR= (BigDecimal.valueOf (KZTAB).multiply (BigDecimal.valueOf (3068))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="VSPMAX1= BigDecimal.valueOf (KZTAB).multiply (BigDecimal.valueOf (1334))" />
    <EVAL exec="VSPMAX2= BigDecimal.valueOf (KZTAB).multiply (BigDecimal.valueOf (667))" />
    <EVAL exec="VSPKURZ= BigDecimal.valueOf (KZTAB).multiply (BigDecimal.valueOf (1134))" />
    <IF expr="KRV == 1">
      <THEN>
        <IF expr="VSPO.compareTo (VSPKURZ) == 1">
          <THEN>
            <EVAL exec="VSP= VSPKURZ" />
          </THEN>
          <ELSE>
            <EVAL exec="VSP= VSPO.setScale (0, BigDecimal.ROUND_DOWN)" />
          </ELSE>
        </IF>
      </THEN>
      <ELSE>
        <EXECUTE method="UMVSP" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Vorsorgepauschale, PAP Seite 20 -->

  <METHOD name="UMVSP">
    <EVAL exec="VSPVOR= (VSPVOR.subtract (ZRE4VP.multiply (BigDecimal.valueOf (0.16)))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <IF expr="VSPVOR.compareTo (BigDecimal.ZERO) == -1">
      <THEN>
        <EVAL exec="VSPVOR= BigDecimal.ZERO" />
      </THEN>
    </IF>
    <IF expr="VSPO.compareTo (VSPVOR) == 1">
      <THEN>
        <EVAL exec="VSP= VSPVOR" />
        <EVAL exec="VSPREST= VSPO.subtract (VSPVOR)" />
        <IF expr="VSPREST.compareTo (VSPMAX1) == 1">
          <THEN>
            <EVAL exec="VSP= VSP.add (VSPMAX1)" />
            <EVAL exec="VSPREST= (VSPREST.subtract (VSPMAX1)).divide (ZAHL2, 2, BigDecimal.ROUND_UP)" />
            <IF expr="VSPREST.compareTo (VSPMAX2) == 1">
              <THEN>
                <EVAL exec="VSP= (VSP.add (VSPMAX2)).setScale (0, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
                <EVAL exec="VSP= (VSP.add (VSPREST)).setScale (0, BigDecimal.ROUND_DOWN)" />
              </ELSE>
            </IF>
          </THEN>
          <ELSE>
            <EVAL exec="VSP= (VSP.add (VSPREST)).setScale (0, BigDecimal.ROUND_DOWN)" />
          </ELSE>
        </IF>
      </THEN>
      <ELSE>
        <EVAL exec="VSP= VSPO.setScale (0, BigDecimal.ROUND_DOWN)" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Lohnsteuer fuer die Steuerklassen V und VI (Â§ 39b Abs. 2 Satz 8 EStG), PAP Seite 21 -->

  <METHOD name="MST5_6">
    <EVAL exec="ZZX= X" />
    <IF expr="ZZX.compareTo (BigDecimal.valueOf (25812)) == 1">
      <THEN>
        <EVAL exec="ZX= BigDecimal.valueOf (25812)" />
        <EXECUTE method="UP5_6" />
	    <IF expr="ZZX.compareTo (BigDecimal.valueOf (200000)) == 1">
	      <THEN>
            <EVAL exec="ST= (ST.add (BigDecimal.valueOf (73158.96))).setScale(0, BigDecimal.ROUND_DOWN);" />
            <EVAL exec="ST= (ST.add ((ZZX.subtract (BigDecimal.valueOf (200000))).multiply (BigDecimal.valueOf (0.45)))).setScale (0, BigDecimal.ROUND_DOWN)" />
          </THEN>
          <ELSE>
            <EVAL exec="ST= (ST.add ((ZZX.subtract (BigDecimal.valueOf (25812))).multiply (BigDecimal.valueOf (0.42)))).setScale (0, BigDecimal.ROUND_DOWN)" />
          </ELSE>
        </IF>
      </THEN>
      <ELSE>
        <EVAL exec="ZX= ZZX" />
        <EXECUTE method="UP5_6" />
        <IF expr="ZZX.compareTo (BigDecimal.valueOf (9144)) == 1">
          <THEN>
            <EVAL exec="VERGL= ST" />
            <EVAL exec="ZX= BigDecimal.valueOf (9144)" />
            <EXECUTE method="UP5_6" />
            <EVAL exec="HOCH= (ST.add ((ZZX.subtract (BigDecimal.valueOf (9144))).multiply (BigDecimal.valueOf (0.42)))).setScale (0, BigDecimal.ROUND_DOWN)" />
            <IF expr="HOCH.compareTo (VERGL) == -1">
              <THEN>
                <EVAL exec="ST= HOCH" />
              </THEN>
              <ELSE>
                <EVAL exec="ST= VERGL" />
              </ELSE>
            </IF>
          </THEN>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Lohnsteuer fuer die Steuerklassen V und VI (Â§ 39b Abs. 2 Satz 8 EStG), PAP Seite 21 -->

  <METHOD name="UP5_6">
    <EVAL exec="X= (ZX.multiply (BigDecimal.valueOf (1.25))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EXECUTE method="UPTAB07" />
    <EVAL exec="ST1= ST" />
    <EVAL exec="X= (ZX.multiply (BigDecimal.valueOf (0.75))).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EXECUTE method="UPTAB07" />
    <EVAL exec="ST2= ST" />
    <EVAL exec="DIFF= (ST1.subtract (ST2)).multiply (ZAHL2)" />
    <EVAL exec="MIST= (ZX.multiply (BigDecimal.valueOf (0.15))).setScale (0, BigDecimal.ROUND_DOWN)" />
    <IF expr="MIST.compareTo (DIFF) == 1">
      <THEN>
        <EVAL exec="ST= MIST" />
      </THEN>
      <ELSE>
        <EVAL exec="ST= DIFF" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Solidaritaetszuschlag, PAP Seite 22 -->

  <METHOD name="MSOLZ">
    <EVAL exec="SOLZFREI= BigDecimal.valueOf (972 * KZTAB)" />
    <IF expr="JBMG.compareTo (SOLZFREI) == 1">
      <THEN>
        <EVAL exec="SOLZJ= (JBMG.multiply (BigDecimal.valueOf (5.5))).divide(ZAHL100).setScale(2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="SOLZMIN= (JBMG.subtract (SOLZFREI)).multiply (BigDecimal.valueOf (20)).divide (ZAHL100).setScale (2, BigDecimal.ROUND_DOWN)" />
        <IF expr="SOLZMIN.compareTo (SOLZJ) == -1">
          <THEN>
            <EVAL exec="SOLZJ= SOLZMIN" />
          </THEN>
        </IF>
        <EVAL exec="JW= SOLZJ.multiply (ZAHL100).setScale (0, BigDecimal.ROUND_DOWN)" />
        <EXECUTE method="UPANTEIL" />
        <EVAL exec="SOLZLZZ= ANTEIL1" />
      </THEN>
      <ELSE>
        <EVAL exec="SOLZLZZ= BigDecimal.ZERO" />
      </ELSE>
    </IF>
    <IF expr="R &gt; 0">
      <THEN>
        <EVAL exec="JW= JBMG.multiply (ZAHL100)" />
        <EXECUTE method="UPANTEIL" />
        <EVAL exec="BK= ANTEIL1" />
      </THEN>
      <ELSE>
        <EVAL exec="BK= BigDecimal.ZERO" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Anteil von Jahresbetraegen fuer einen LZZ (Â§ 39b Abs. 2 Satz 10 EStG), PAP Seite 23 -->

  <METHOD name="UPANTEIL">
    <IF expr="LZZ == 1">
      <THEN>
        <EVAL exec="ANTEIL1= JW" />
        <EVAL exec="ANTEIL2= JW" />
      </THEN>
      <ELSE>
        <IF expr="LZZ == 2">
          <THEN>
            <EVAL exec="ANTEIL1= JW.divide (ZAHL12, 0, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="ANTEIL2= JW.divide (ZAHL12, 0, BigDecimal.ROUND_UP)" />
          </THEN>
          <ELSE>
            <IF expr="LZZ == 3">
              <THEN>
                <EVAL exec="ANTEIL1= (JW.multiply (ZAHL7)).divide (ZAHL360, 0, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="ANTEIL2= (JW.multiply (ZAHL7)).divide (ZAHL360, 0, BigDecimal.ROUND_UP)" />
              </THEN>
              <ELSE>
                <EVAL exec="ANTEIL1= JW.divide (ZAHL360, 0, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="ANTEIL2= JW.divide (ZAHL360, 0, BigDecimal.ROUND_UP)" />
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Berechnung sonstiger Bezuege nach Â§ 39b Abs. 3 Saetze 1 bis 7 EStG), PAP Seite 24 -->

  <METHOD name="MSONST">
    <EVAL exec="LZZ= 1" />
    <IF expr="ZMVB == 0">
      <THEN>
        <EVAL exec="ZMVB= 12" />
      </THEN>
    </IF>
    <IF expr="SONSTB.compareTo (BigDecimal.ZERO) == 0">
      <THEN>
        <EVAL exec="LSTSO= BigDecimal.ZERO" />
        <EVAL exec="STS= BigDecimal.ZERO" />
        <EVAL exec="SOLZS= BigDecimal.ZERO" />
        <EVAL exec="BKS= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <EXECUTE method="MOSONST" />
        <EVAL exec="ZRE4J= ((JRE4.add (SONSTB)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="ZVBEZJ= ((JVBEZ.add (VBS)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EXECUTE method="MRE4SONST" />
        <EXECUTE method="MLSTJAHR" />
        <EVAL exec="LSTSO= ST.multiply (ZAHL100)" />
        <EVAL exec="STS= LSTSO.subtract (LSTOSO)" />
        <IF expr="STS.compareTo (BigDecimal.ZERO) == -1">
          <THEN>
            <EVAL exec="STS= BigDecimal.ZERO" />
          </THEN>
        </IF>
        <EVAL exec="SOLZS= STS.multiply (BigDecimal.valueOf (5.5)).divide (ZAHL100, 0, BigDecimal.ROUND_DOWN)" />
        <IF expr="R &gt; 0">
          <THEN>
            <EVAL exec="BKS= STS" />
          </THEN>
          <ELSE>
            <EVAL exec="BKS= BigDecimal.ZERO" />
          </ELSE>
        </IF>
      </ELSE>
    </IF>
  </METHOD>

  <!-- Berechnung der Verguetung fuer mehrjaehrige Taetigkeit nach Â§ 39b Abs. 3 Satz 9 EStG), PAP Seite 25 -->

  <METHOD name="MVMT">
    <IF expr="VKAPA.compareTo (BigDecimal.ZERO) == -1">
      <THEN>
        <EVAL exec="VKAPA= BigDecimal.ZERO" />
      </THEN>
    </IF>
    <IF expr="(VMT.add (VKAPA)).compareTo (BigDecimal.ZERO) == 1">
      <THEN>
        <IF expr="LSTSO.compareTo (BigDecimal.ZERO) == 0">
          <THEN>
            <EXECUTE method="MOSONST" />
            <EVAL exec="LST1= LSTOSO" />
          </THEN>
          <ELSE>
            <EVAL exec="LST1= LSTSO" />
          </ELSE>
        </IF>
        <EVAL exec="ZRE4OSO= ZRE4" />
        <EVAL exec="ZTABFBOSO= ZTABFB" />
        <EVAL exec="FVBZOSO= FVBZ" />
        <EVAL exec="ZRE4J= ((JRE4.add (SONSTB).add (VMT).add (VKAPA)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="ZVBEZJ= ((JVBEZ.add (VBS).add (VKAPA)).divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EXECUTE method="MRE4SONST" />
        <EXECUTE method="MLSTJAHR" />
        <EVAL exec="LST3= ST.multiply (ZAHL100)" />
        <EVAL exec="ZTABFB= (ZTABFB.subtract (FVBZ).add (FVBZOSO)).setScale (2, BigDecimal.ROUND_DOWN)" />
        <EVAL exec="KENNVMT= 1" />
        <IF expr="(JRE4.add (SONSTB).subtract (JFREIB).add (JHINZU)).compareTo (BigDecimal.ZERO) == -1">
          <THEN>
            <EVAL exec="KENNVMT= 2" />
            <EXECUTE method="MLSTJAHR" />
            <EVAL exec="LST2= ST.multiply (ZAHL100)" />
            <EVAL exec="STV= LST2.multiply (ZAHL5)" />
          </THEN>
          <ELSE>
            <EVAL exec="ZRE4VMT= (((VMT.divide (ZAHL100)).add (VKAPA.divide (ZAHL100)).subtract (ZTABFB).add (ZTABFBOSO)).divide (ZAHL5)).setScale (2, BigDecimal.ROUND_DOWN)" />
            <EXECUTE method="MLSTJAHR" />
            <EVAL exec="LST2= ST.multiply (ZAHL100)" />
            <EVAL exec="STV= (LST2.subtract (LST1)).multiply (ZAHL5)" />
          </ELSE>
        </IF>
        <EVAL exec="LST3= LST3.subtract (LST1)" />
        <IF expr="LST3.compareTo (STV) == -1">
          <THEN>
            <EVAL exec="STV= LST3" />
          </THEN>
        </IF>
        <IF expr="STV.compareTo (BigDecimal.ZERO) == -1">
          <THEN>
            <EVAL exec="STV= BigDecimal.ZERO" />
          </THEN>
        </IF>
        <EVAL exec="SOLZV= (STV.multiply (BigDecimal.valueOf (5.5))).divide (ZAHL100, 0, BigDecimal.ROUND_DOWN)" />
        <IF expr="R &gt; 0">
          <THEN>
            <EVAL exec="BKV= STV" />
          </THEN>
          <ELSE>
            <EVAL exec="BKV= BigDecimal.ZERO" />
          </ELSE>
        </IF>
      </THEN>
      <ELSE>
        <EVAL exec="STV= BigDecimal.ZERO" />
        <EVAL exec="SOLZV= BigDecimal.ZERO" />
        <EVAL exec="BKV= BigDecimal.ZERO" />
      </ELSE>
    </IF>
  </METHOD>

  <!-- Sonderberechnung ohne sonstige BezÃ¼ge fÃ¼r Berechnung bei sonstigen BezÃ¼gen oder VergÃ¼tung fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit, PAP Seite 26 -->

  <METHOD name="MOSONST">
    <EVAL exec="ZRE4J= (JRE4.divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="ZVBEZJ= (JVBEZ.divide (ZAHL100)).setScale (2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="JLFREIB= JFREIB.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
    <EVAL exec="JLHINZU= JHINZU.divide (ZAHL100, 2, BigDecimal.ROUND_DOWN)" />
    <EXECUTE method="MRE4" />
    <EXECUTE method="MRE4ABZ" />
    <EXECUTE method="MZTABFB" />
    <EXECUTE method="MLSTJAHR" />
    <EVAL exec="LSTOSO= ST.multiply (ZAHL100)" />
  </METHOD>

  <!-- Sonderberechnung mit sonstige BezÃ¼ge fÃ¼r Berechnung bei sonstigen BezÃ¼gen oder VergÃ¼tung fÃ¼r mehrjÃ¤hrige TÃ¤tigkeit, PAP Seite 26 -->

  <METHOD name="MRE4SONST">
    <EXECUTE method="MRE4" />
    <EVAL exec="FVB= FVBSO" />
    <EXECUTE method="MRE4ABZ" />
    <EVAL exec="FVBZ= FVBZSO" />
    <EXECUTE method="MZTABFB" />
  </METHOD>

  <!-- Tarifliche Einkommensteuer Â§32a EStG, PAP Seite 27 -->

  <METHOD name="UPTAB07">
    <IF expr="X.compareTo (BigDecimal.valueOf (7665)) == -1">
      <THEN>
        <EVAL exec="ST= BigDecimal.ZERO" />
      </THEN>
      <ELSE>
        <IF expr="X.compareTo (BigDecimal.valueOf (12740)) == -1">
          <THEN>
            <EVAL exec="Y= (X.subtract (BigDecimal.valueOf (7664))).divide (BigDecimal.valueOf (10000), 6, BigDecimal.ROUND_DOWN)" />
            <EVAL exec="RW= Y.multiply (BigDecimal.valueOf (883.74))" />
            <EVAL exec="RW= RW.add (BigDecimal.valueOf (1500))" />
            <EVAL exec="ST= (RW.multiply (Y)).setScale (0, BigDecimal.ROUND_DOWN)" />
          </THEN>
          <ELSE>
            <IF expr="X.compareTo (BigDecimal.valueOf (52152)) == -1">
              <THEN>
                <EVAL exec="Y= (X.subtract (BigDecimal.valueOf (12739))).divide (BigDecimal.valueOf (10000), 6, BigDecimal.ROUND_DOWN)" />
                <EVAL exec="RW= Y.multiply (BigDecimal.valueOf (228.74))" />
                <EVAL exec="RW= RW.add (BigDecimal.valueOf (2397))" />
                <EVAL exec="RW= RW.multiply (Y)" />
                <EVAL exec="ST= (RW.add (BigDecimal.valueOf (989))).setScale (0, BigDecimal.ROUND_DOWN)" />
              </THEN>
              <ELSE>
	            <IF expr="X.compareTo (BigDecimal.valueOf (250001)) == -1">
	              <THEN>
                    <EVAL exec="ST= ((X.multiply (BigDecimal.valueOf (0.42))).subtract (BigDecimal.valueOf (7914))).setScale (0, BigDecimal.ROUND_DOWN)" />
                  </THEN>
                  <ELSE>
                    <EVAL exec="ST= ((X.multiply (BigDecimal.valueOf (0.45))).subtract (BigDecimal.valueOf (15414))).setScale (0, BigDecimal.ROUND_DOWN)" />
                  </ELSE>
                </IF>
              </ELSE>
            </IF>
          </ELSE>
        </IF>
      </ELSE>
    </IF>
    <EVAL exec="ST= ST.multiply (BigDecimal.valueOf (KZTAB))" />
  </METHOD>

</METHODS>
</PAP>